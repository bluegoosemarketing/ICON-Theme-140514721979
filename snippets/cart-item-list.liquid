{%- comment -%}
  ==========================================================================
  REVISION: V18 - FINAL ROBUST PARSING & VISIBILITY FIX
  ==========================================================================
  - This version incorporates all team feedback for a definitive, world-class solution.
  - HYPER-ROBUST PARSING: The logic now strips a wide range of non-numeric
    characters and words (e.g., '(', '-', 'Meals') from variant titles before
    parsing the number. This ensures counts are found reliably in formats
    like "(12 Meals)" or "Small - 12-Meal Plan".
  - GUARANTEED VISIBILITY: The meal list is always rendered. The quantity
    prefix is shown only if a valid, positive quantity is calculated,
    resolving the previous regression.
  - REMAINDER DISTRIBUTION: Retains the accurate modulo-based logic to
    distribute quantities for unevenly divisible plans.
{%- endcomment -%}
{%- liquid
  assign class_prefix = 'cart-sidebar'
  if context == 'drawer'
    assign class_prefix = 'cart-drawer'
  endif
-%}

<div class="{{ class_prefix }}__content">
  {% if cart.item_count > 0 %}
    <ul class="{{ class_prefix }}__items cart-items" aria-label="Cart items">

      {% for item in cart.items %}
        {%- if item.product.type == 'OPTIONS_HIDDEN_PRODUCT' -%}
          {%- assign builder_id = item.properties._boldBuilderId | default: item.properties.builder_id -%}
          <div data-builder-id="{{ builder_id }}" data-bold-builder-id="{{ builder_id }}" style="display:none">
            <input type="hidden" class="cart-item-quantity" name="updates[]" value="{{ item.quantity }}" data-line-key="{{ item.key }}" data-builder-id="{{ builder_id }}" data-bold-builder-id="{{ builder_id }}">
          </div>
          {% continue %}
        {%- endif -%}

        {%- liquid
          assign is_custom_meal = false
assign builder_id = item.properties._boldBuilderId | default: item.properties.builder_id
if builder_id != blank or item.product.handle == 'custom-meals' or item.product.handle == 'custom-breakfast' or item.product.type == 'CUSTOM MEALS' or item.product.type == 'CUSTOM BREAKFAST'
  assign is_custom_meal = true
endif

          assign product_type_lower = item.product.type | downcase
          assign is_meal_plan = false
          if product_type_lower contains 'meal plan' or item.product.handle contains 'meal-plan'
            assign is_meal_plan = true
          endif
          assign included_meals = nil
          if is_meal_plan
            assign included_meals = item.product.metafields.custom.included_meals.value | default: item.product.metafields.custom.meal_plan_products.value
          endif

          assign subscription_frequency = ''
          if item.selling_plan_allocation
            assign first_option = item.selling_plan_allocation.selling_plan.options | first
            assign subscription_frequency = first_option.value
          endif

          assign line_item_price = item.final_line_price

          if is_custom_meal
            for hidden_item in cart.items
              assign hidden_item_builder_id = hidden_item.properties._boldBuilderId | default: hidden_item.properties.builder_id
              if hidden_item.product.type == 'OPTIONS_HIDDEN_PRODUCT' and hidden_item_builder_id == builder_id
                assign line_item_price = line_item_price | plus: hidden_item.final_line_price
              endif
            endfor
          endif
        -%}
        
        <li class="{{ class_prefix }}__item" data-line-key="{{ item.key }}"{% if builder_id %} data-builder-id="{{ builder_id }}" data-bold-builder-id="{{ builder_id }}"{% endif %}>
          <div class="{{ class_prefix }}__item-image">
            <a href="{{ item.url }}" tabindex="-1">
              <img src="{{ item.image | img_url: '200x' }}" alt="{{ item.image.alt | escape }}" loading="lazy" width="72" height="72">
            </a>
          </div>
          <div class="{{ class_prefix }}__item-details">
            <a href="{{ item.url }}" class="{{ class_prefix }}__item-title" title="{{ item.product.title }}">{{ item.product.title }}</a>
            <div class="{{ class_prefix }}__item-meta">
              <span class="{{ class_prefix }}__item-price">{{ line_item_price | money }}</span>
              <div class="{{ class_prefix }}__item-actions">
                <div class="{{ class_prefix }}__quantity-selector">
                  <button type="button" class="{{ class_prefix }}__quantity-btn" data-action="minus" aria-label="Decrease quantity">－</button>
                  <input
                    type="number"
                    class="{{ class_prefix }}__quantity-value"
                    value="{{ item.quantity }}"
                    min="0"
                    inputmode="numeric"
                    aria-label="Quantity"
                  >
                  <button type="button" class="{{ class_prefix }}__quantity-btn" data-action="plus" aria-label="Increase quantity">＋</button>
                </div>
              </div>
            </div>

            {% if subscription_frequency != '' %}
              <div class="{{ class_prefix }}__subscription-info">
                <svg class="{{ class_prefix }}__subscription-icon" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="23 4 23 10 17 10"></polyline><polyline points="1 20 1 14 7 14"></polyline><path d="M3.51 9a9 9 0 0114.83-3.36L23 10"></path><path d="M20.49 15A9 9 0 015.67 18.36L1 14"></path></svg>
                <span>Renews every {{ subscription_frequency }}</span>
              </div>
            {% endif %}

            {%- if is_meal_plan and included_meals != blank -%}
              {%- assign num_meal_types = included_meals | map: 'title' | compact | size -%}
              {%- if num_meal_types > 0 -%}
                {%- comment -%} Robust meal-count parse from option1 (fallback to title) {%- endcomment -%}
                {%- assign variant_string = item.variant.option1 | default: item.variant.title -%}
                {%- assign tokens = variant_string | split: ' ' -%}
                {%- assign total_meals_per_plan = 0 -%}
                {%- for token in tokens -%}
                  {%- assign clean = token | remove: '(' | remove: ')' | remove: '[' | remove: ']' | remove: ',' | remove: '.' | remove: '+' | remove: '–' | remove: '—' | remove: '-' | remove: 'Meal' | remove: 'Meals' | remove: 'meal' | remove: 'meals' -%}
                  {%- assign maybe_num = clean | times: 1 -%}
                  {%- if maybe_num > 0 -%}
                    {%- assign total_meals_per_plan = maybe_num -%}
                    {%- break -%}
                  {%- endif -%}
                {%- endfor -%}

                {%- assign total_meals_in_cart = total_meals_per_plan | times: item.quantity -%}
                {%- assign base_qty_per_meal = total_meals_in_cart | divided_by: num_meal_types -%}
                {%- assign remainder = total_meals_in_cart | modulo: num_meal_types -%}

                <ul class="{{ class_prefix }}__properties {{ class_prefix }}__properties--custom">
                  {%- for meal in included_meals -%}
                    {%- assign current_meal_qty = base_qty_per_meal -%}
                    {%- if remainder > 0 and forloop.index0 < remainder -%}
                      {%- assign current_meal_qty = current_meal_qty | plus: 1 -%}
                    {%- endif -%}
                    <li class="{{ class_prefix }}__property">
                      <span class="ingredient-line {{ class_prefix }}__property-value">
                        {%- if current_meal_qty > 0 -%}<span class="ingredient-qty">{{ current_meal_qty }}x</span>{%- endif -%}
                        <span class="ingredient-name">{{ meal.title | truncate: 25 }}</span>
                      </span>
                    </li>
                  {%- endfor -%}
                </ul>
              {%- endif -%}
            {%- endif -%}

            {%- assign property_size = item.properties | size -%}
            {%- if property_size > 0 and is_meal_plan == false -%}
  <ul class="{{ class_prefix }}__properties{% if is_custom_meal %} {{ class_prefix }}__properties--custom{% endif %}">
    {%- if is_custom_meal -%}
      {%- for p in item.properties -%}
        {%- liquid
          assign hidden_property = false
          if p.first.first == '_' or p.last == blank
            assign hidden_property = true
          endif

          assign is_quantity_property = false
          if p.first contains ' OZ' or p.first contains ' C' or p.first contains ' EA' or p.first contains ' SL'
            assign is_quantity_property = true
          endif
        -%}
        {%- if hidden_property == false and is_quantity_property == false -%}
          {%- liquid
            assign ingredient_name = p.last | strip
            assign ingredient_key = ingredient_name | upcase
            if ingredient_key == 'CHICKEN BREAST'
              assign ingredient_key = 'CHICKEN'
            endif

            assign qty_value = ''
            assign qty_unit = ''
            assign units = 'OZ,C,EA,SL' | split: ','
            for unit in units
              assign key_simple = ingredient_key | append: ' ' | append: unit
              assign key_with_1 = key_simple | append: ' 1'
              assign key_with_2 = key_simple | append: ' 2'
              assign temp_val = item.properties[key_simple]
              if temp_val == blank
                assign temp_val = item.properties[key_with_1]
              endif
              if temp_val == blank
                assign temp_val = item.properties[key_with_2]
              endif
              if temp_val != blank
                assign qty_value = temp_val
                assign qty_unit = unit
                break
              endif
            endfor
          -%}
          <li class="{{ class_prefix }}__property">
            <span class="ingredient-line {{ class_prefix }}__property-value">
              {%- if qty_value != '' -%}
                <span class="ingredient-qty">{{ qty_value }}{{ qty_unit | downcase }}</span>
              {%- endif -%}
              <span class="ingredient-name">{{ ingredient_name | truncate: 25 }}</span>
            </span>
          </li>
        {%- endif -%}
      {%- endfor -%}
    {%- else -%}
      {%- for p in item.properties -%}
        {%- unless p.first.first == '_' or p.last == blank -%}
          <li class="{{ class_prefix }}__property">
            <span class="{{ class_prefix }}__property-name">{{ p.first }}:</span>
            <span class="{{ class_prefix }}__property-value">
              {%- if p.last contains '/uploads/' -%}
                <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a>
              {%- else -%}
                {{ p.last }}
              {%- endif -%}
            </span>
          </li>
        {%- endunless -%}
      {%- endfor -%}
    {%- endif -%}
  </ul>
{%- endif -%}
          </div>
          <button type="button" class="{{ class_prefix }}__remove-btn" data-action="remove" aria-label="Remove item">
            <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor" aria-hidden="true">
              <path d="M17 12C17 11.4477 16.5523 11 16 11H8C7.44772 11 7 11.4477 7 12C7 12.5523 7.44771 13 8 13H16C16.5523 13 17 12.5523 17 12Z"></path>
              <path fill-rule="evenodd" clip-rule="evenodd" d="M12 23C18.0751 23 23 18.0751 23 12C23 5.92487 18.0751 1 12 1C5.92487 1 1 5.92487 1 12C1 18.0751 5.92487 23 12 23ZM12 20.9932C7.03321 20.9932 3.00683 16.9668 3.00683 12C3.00683 7.03321 7.03321 3.00683 12 3.00683C16.9668 3.00683 20.9932 7.03321 20.9932 12C20.9932 16.9668 16.9668 20.9932 12 20.9932Z"></path>
            </svg>
          </button>
        </li>
      {% endfor %}
    </ul>
  {% else %}
    <div aria-live="polite" class="{{ class_prefix }}__empty-state cart-empty-box">
      <svg class="{{ class_prefix }}__empty-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path>
        <line x1="3" y1="6" x2="21" y2="6"></line>
        <path d="M16 10a4 4 0 0 1-8 0"></path>
      </svg>
      <p class="{{ class_prefix }}__empty-text">{{ 'cart.general.empty' | t }}</p>
    </div>
  {% endif %}
</div>