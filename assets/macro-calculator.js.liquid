const nutritionDiv = document.getElementById('nutrition-container');
let nutritionProtein = [];
let nutritionProteinn = [];
let nutritionCarb = [];
let nutritionCarbb = [];
let nutritionFactItems = [];

// NEW: Smart formatting function for clean, readable numbers.
function formatMacroValue(number) {
  if (number === 0) {
    return '0';
  }
  // Check if the number is a whole number (e.g., 25.0)
  if (number % 1 === 0) {
    return number.toFixed(0);
  }
  // Otherwise, return it with one decimal place.
  return number.toFixed(1);
}

if (nutritionDiv) {
  nutritionDiv.style.display = 'none';
  nutritionDiv.className = 'nutrition-container-v8'; // Final version class

  // BUG FIX: Rewritten toggle logic for robust state handling.
  nutritionDiv.addEventListener('click', function(event) {
    const primaryToggle = event.target.closest('.panel-toggle-primary');
    if (!primaryToggle) return;

    event.preventDefault();
    const panel = primaryToggle.closest('.nutrition-panel-v8');
    const panelBody = panel.querySelector('.panel-body');

    if (panelBody) {
      // 1. Toggle the state first.
      panel.classList.toggle('is-expanded');
      panelBody.classList.toggle('is-hidden');
      
      // 2. Now check the NEW state.
      const isNowExpanded = panel.classList.contains('is-expanded');
      
      // 3. Update text and ARIA based on the correct new state.
      primaryToggle.setAttribute('aria-expanded', isNowExpanded);
      primaryToggle.querySelector('.toggle-text').textContent = isNowExpanded ? 'Less Info' : 'More Info';
    }
  });
}

// --- REWRITTEN: nutritionTable using the new formatMacroValue function ---
function nutritionTable() {
  nutritionFactItems = [...nutritionProtein, ...nutritionProteinn, ...nutritionCarb, ...nutritionCarbb];

  const nutritionFact = { /* NUTRITION DATA (UNCHANGED) */
    'black bean vegan patty': { calorie: 150, protein: 8, carb: 27, fat: 1.5, sodium: 610, fiber: 9, satfat: 0, transfat: 0, chol: 0 }, 'beyond meat vegan patty': { calorie: 280, protein: 20, carb: 6, fat: 20, sodium: 390, fiber: 2, satfat: 0, transfat: 0, chol: 0 }, brisket: { calorie: 67.5, protein: 9.3, carb: 0, fiber: 0, fat: 3.3, satfat: 1.3, transfat: 0, chol: 23.8, sodium: 112.5 }, chicken: { calorie: 40, protein: 8.8, carb: 0, fiber: 0, fat: 0.6, satfat: 0, transfat: 0, chol: 17.5, sodium: 37.5 }, 'chicken breast': { calorie: 40, protein: 8.8, carb: 0, fiber: 0, fat: 0.6, satfat: 0, transfat: 0, chol: 17.5, sodium: 37.5 }, 'chicken thighs': { calorie: 52.5, protein: 7.3, carb: 0, fiber: 0, fat: 2.5, satfat: 0.5, transfat: 0, chol: 26.3, sodium: 50 }, cod: { calorie: 22.5, protein: 5.8, carb: 0, fiber: 0, fat: 0, satfat: 0, transfat: 0, chol: 11.3, sodium: 23.8 }, 'egg whites': { calorie: 16.67, protein: 4, carb: 0, fiber: 0, fat: 0, satfat: 0, transfat: 0, chol: 0, sodium: 56.67 }, 'ground beef': { calorie: 65, protein: 8.5, carb: 0.5, fiber: 0, fat: 3.3, satfat: 0, transfat: 0, chol: 18.8, sodium: 35 }, 'ground bison': { calorie: 65, protein: 6.8, carb: 0, fiber: 0, fat: 4, satfat: 1.3, transfat: 0, chol: 20, sodium: 21.3 }, 'ground turkey': { calorie: 55, protein: 6.8, carb: 0.5, fiber: 0, fat: 3, satfat: 0.9, transfat: 0, chol: 20, sodium: 57.5 }, salmon: { calorie: 50, protein: 7, carb: 0, fiber: 0, fat: 2.5, satfat: 0.5, transfat: 0, chol: 15, sodium: 23.8 }, shrimp: { calorie: 27.5, protein: 5.8, carb: 0.3, fiber: 0, fat: 0.3, satfat: 0, transfat: 0, chol: 40, sodium: 82.5 }, steak: { calorie: 47.5, protein: 8.3, carb: 0.8, fiber: 0, fat: 1.3, satfat: 0.5, transfat: 0, chol: 16.3, sodium: 40 }, 'turkey bacon': { calorie: 40, protein: 3, carb: 0, fiber: 0, fat: 3, satfat: 0.5, transfat: 0, chol: 15, sodium: 160 }, 'turkey breast': { calorie: 35, protein: 7.5, carb: 0, fiber: 0, fat: 0.5, satfat: 0, transfat: 0, chol: 17.5, sodium: 95 }, 'whole egg': { calorie: 50, protein: 5, carb: 0, fiber: 0, fat: 3.5, satfat: 1.0, transfat: 0, chol: 130, sodium: 50 }, asparagus: { calorie: 3.8, protein: 0.5, carb: 0.8, fiber: 0.5, fat: 0, satfat: 0, transfat: 0, chol: 0, sodium: 0 }, broccoli: { calorie: 9, protein: 0.7, carb: 1.4, fiber: 0.7, fat: 0, satfat: 0, transfat: 0, chol: 0, sodium: 5.4 }, 'brown rice': { calorie: 50, protein: 1.1, carb: 10.8, fiber: 0, fat: 0.3, satfat: 0, transfat: 0, chol: 0, sodium: 1.1 }, cauliflower: { calorie: 15, protein: 1, carb: 2.5, fiber: 1, fat: 0, satfat: 0, transfat: 0, chol: 0, sodium: 15 }, 'green beans': { calorie: 11.3, protein: 0.8, carb: 2, fiber: 0.8, fat: 0, satfat: 0, transfat: 0, chol: 0, sodium: 0 }, 'jasmine saffron rice': { calorie: 40, protein: 0.8, carb: 9.4, fiber: 0, fat: 0, satfat: 0, transfat: 0, chol: 0, sodium: 56 }, 'kyoto blend veggies': { calorie: 24.5, protein: 1.9, carb: 3.4, fiber: 0, fat: 0.7, satfat: 0, transfat: 0, chol: 0, sodium: 7.3 }, 'gluten free penne pasta': { calorie: 70, protein: 1.5, carb: 15, fat: 0.25, sodium: 0, fiber: 0.25, satfat: 0, transfat: 0, chol: 0 }, oatmeal: { calorie: 45, protein: 1.5, carb: 8.25, fiber: 1.2, fat: 0.9, satfat: 0.15, transfat: 0, chol: 0, sodium: 0 }, quinoa: { calorie: 50, protein: 2, carb: 10, fat: 1, sodium: 70, fiber: 0, satfat: 0, transfat: 0, chol: 0 }, 'red quinoa': { calorie: 30, protein: 1.1, carb: 5.2, fiber: 0.5, fat: 0.5, satfat: 0, transfat: 0, chol: 0, sodium: 0 }, 'quinoa rice blend': { calorie: 60, protein: 2, carb: 10, fat: 1, sodium: 60, fiber: 0, satfat: 0, transfat: 0, chol: 0 }, 'red potatoes': { calorie: 25, protein: 0.5, carb: 4.8, fiber: 0.5, fat: 0.4, satfat: 0, transfat: 0, chol: 0, sodium: 1.3 }, 'sauteed carrots': { calorie: 17.5, protein: 0, carb: 2.5, fiber: 1, fat: 0.75, satfat: 0, transfat: 0, chol: 0, sodium: 20 }, 'sweet potato mash': { calorie: 32.5, protein: 0.5, carb: 6.3, fiber: 1, fat: 0.5, satfat: 0, transfat: 0, chol: 0, sodium: 0 }, 'sweet potatoes': { calorie: 30, protein: 0.5, carb: 5.5, fiber: 0.8, fat: 0.6, satfat: 0, transfat: 0, chol: 0, sodium: 15 }, 'white rice': { calorie: 60, protein: 1.4, carb: 13.9, fiber: 0, fat: 0.1, satfat: 0, transfat: 0, chol: 0, sodium: 0 }, 'home style protein pancakes': { calorie: 180, protein: 16, carb: 27, fiber: 0, fat: 0.5, satfat: 0, transfat: 0, chol: 0, sodium: 350 }, 'original oats': { calorie: 10, protein: 0.375, carb: 1.75, fat: 0.1875, sodium: 0, fiber: 6.5, satfat: 0, transfat: 0, chol: 0 }};

  let breakdownHtml = '';
  let totals = { cal: 0, p: 0, c: 0, f: 0, sod: 0, fib: 0, sfat: 0, tfat: 0, chol: 0 };

  nutritionFactItems.forEach(item => {
    const itemName = item.item, ozVal = Number(item.oz), macros = nutritionFact[itemName];
    if (!macros) return;
    const itemCal = macros.calorie*ozVal, itemP = macros.protein*ozVal, itemC = macros.carb*ozVal, itemF = macros.fat*ozVal, itemFib = macros.fiber*ozVal, itemSfat = macros.satfat*ozVal, itemTfat = macros.transfat*ozVal, itemChol = macros.chol*ozVal, itemSod = macros.sodium*ozVal;
    totals = { cal: totals.cal+itemCal, p: totals.p+itemP, c: totals.c+itemC, f: totals.f+itemF, fib: totals.fib+itemFib, sfat: totals.sfat+itemSfat, tfat: totals.tfat+itemTfat, chol: totals.chol+itemChol, sod: totals.sod+itemSod };

    breakdownHtml += `
      <div class="ingredient-row">
        <div class="ingredient-name">${itemName} (${ozVal}oz)</div>
        <div class="ingredient-details">
          <span><strong>Cal:</strong> ${formatMacroValue(itemCal)}</span>
          <span><strong>P:</strong> ${formatMacroValue(itemP)}g</span>
          <span><strong>C:</strong> ${formatMacroValue(itemC)}g</span>
          <span><strong>F:</strong> ${formatMacroValue(itemF)}g</span>
          <span><strong>Fiber:</strong> ${formatMacroValue(itemFib)}g</span>
          <span><strong>Sat Fat:</strong> ${formatMacroValue(itemSfat)}g</span>
          <span><strong>Sodium:</strong> ${formatMacroValue(itemSod)}mg</span>
        </div>
      </div>
    `;
  });

  const generatedPanel = `
    <div class="nutrition-panel-v8">
      <div class="macro-grid--interactive">
        <div class="macro-stat macro-stat--calories"><span class="macro-stat__value">${formatMacroValue(totals.cal)}</span><span class="macro-stat__label">Calories</span></div>
        <div class="macro-stat macro-stat--protein"><span class="macro-stat__value">${formatMacroValue(totals.p)}g</span><span class="macro-stat__label">Protein</span></div>
        <div class="macro-stat macro-stat--carbs"><span class="macro-stat__value">${formatMacroValue(totals.c)}g</span><span class="macro-stat__label">Carbs</span></div>
        <div class="macro-stat macro-stat--fats"><span class="macro-stat__value">${formatMacroValue(totals.f)}g</span><span class="macro-stat__label">Fats</span></div>
        <div class="macro-stat macro-stat--fiber"><span class="macro-stat__value">${formatMacroValue(totals.fib)}g</span><span class="macro-stat__label">Fiber</span></div>
        <div class="macro-stat macro-stat--sodium"><span class="macro-stat__value">${formatMacroValue(totals.sod)}mg</span><span class="macro-stat__label">Sodium</span></div>
      </div>
      <div class="panel-footer">
        <a href="#" class="panel-toggle-primary" role="button" aria-expanded="false">
          <span class="toggle-text">More Info</span>
          <span class="toggle-icon"></span>
        </a>
      </div>
      <div class="panel-body is-hidden">
        <h4 class="panel-body-title">Ingredient Breakdown</h4>
        ${breakdownHtml}
      </div>
    </div>
  `;

  if (nutritionFactItems.length > 0) {
    nutritionDiv.style.display = 'block';
    nutritionDiv.innerHTML = generatedPanel;
  } else {
    nutritionDiv.style.display = 'none';
    nutritionDiv.innerHTML = '';
  }
}

// --- BOLD OPTIONS LISTENER (UNCHANGED) ---
BOLD.options.app.on('option_changed', function(obj){
  const proteinSelected = document.querySelector('select.dd_1188045_479515')?.value, sideSelected1 = document.querySelector('select.dd_1188614_479515')?.value, sideSelected2 =  document.querySelector('select.dd_1188639_479515')?.value, protein2Selected = document.querySelector('select.dd_1188667_479729')?.value, sideSelected3 = document.querySelector('select.dd_1188678_479729')?.value;
  let modifiedVal = false;
  if(obj.data.option_key.indexOf('sw_') > -1){
    document.querySelectorAll('.'+obj.data.option_key).forEach(function(el){
       const parentLbl = el.closest('label'), title = parentLbl.querySelector('.bold_option_swatch_title .bold_option_value_title').innerHTML;
       let subHTML = '<sub class="oz">oz</sub>';
       if ( proteinSelected == 'Beyond Meat Vegan Patty' && obj.data.option.helpText == 'Protein' ) { subHTML = '<sub class="oz">ea</sub>'; }
       if ( proteinSelected == 'Black Bean Vegan Patty' && obj.data.option.helpText == 'Protein' ) { subHTML = '<sub class="oz">ea</sub>'; }
       if ( sideSelected1 == 'Brown Rice' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">c</sub>'; modifiedVal = true; }
       if ( sideSelected1== 'Gluten Free Penne Pasta' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( sideSelected1 == 'Jasmine Saffron Rice' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">c</sub>'; modifiedVal = true; }
       if ( sideSelected1 == 'Kyoto Blend Veggies' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">c</sub>'; modifiedVal = true; }
       if ( sideSelected1 == 'Quinoa' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( sideSelected1 == 'Red Quinoa' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( sideSelected1 == 'Quinoa Rice Blend' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( sideSelected1 == 'White Rice' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( sideSelected2 == 'Brown Rice' && obj.data.option.helpText == 'Carbb' ) { subHTML = '<sub class="oz">c</sub>'; modifiedVal = true; }
       if ( sideSelected2 == 'Gluten Free Penne Pasta' && obj.data.option.helpText == 'Carbb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( sideSelected2 == 'Jasmine Saffron Rice' && obj.data.option.helpText == 'Carbb' ) { subHTML = '<sub class="oz">c</sub>'; modifiedVal = true; }
       if ( sideSelected2 == 'Kyoto Blend Veggies' && obj.data.option.helpText == 'Carbb' ) { subHTML = '<sub class="oz">c</sub>'; modifiedVal = true; }
       if ( sideSelected2 == 'Quinoa' && obj.data.option.helpText == 'Carbb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( sideSelected2 == 'Red Quinoa' && obj.data.option.helpText == 'Carbb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( sideSelected2 == 'Quinoa Rice Blend' && obj.data.option.helpText == 'Carbb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( sideSelected2 == 'White Rice' && obj.data.option.helpText == 'Carbb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( protein2Selected == 'Turkey Bacon' && obj.data.option.helpText == 'Proteinn' ) { subHTML = '<sub class="oz">sl</sub>';  modifiedVal = true; }
       if ( protein2Selected == 'Beyond Meat Vegan Patty' && obj.data.option.helpText == 'Proteinn' ) { subHTML = '<sub class="oz">ea</sub>';  modifiedVal = true; }
       if ( protein2Selected == 'Black Bean Vegan Patty' && obj.data.option.helpText == 'Proteinn' ) { subHTML = '<sub class="oz">ea</sub>';  modifiedVal = true; }
       if ( sideSelected3 == 'Home Style Protein Pancakes' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">ea</sub>';  modifiedVal = true; }
       if ( sideSelected3 == 'Oatmeal' && obj.data.option.helpText == 'Carb' ) { subHTML = '<sub class="oz">c</sub>';  modifiedVal = true; }
       if ( ! modifiedVal ) { parentLbl.querySelector('.bold_option_value_swatch span').innerHTML = isNaN(title) ? title : `${title} ${subHTML}`; } else { parentLbl.querySelector('.bold_option_value_swatch span').innerHTML = `${title} ${subHTML}`; }
    }); 
  }
  let currentValOz = obj.data.option.getValue();
  if (obj.data.option.helpText == 'Protein'){ const proteinName = obj.data.option.internalName.replace(/OZ|EACH|CUP|SLICE/gi,'').trim().toLocaleLowerCase(); if ( proteinName != '' && currentValOz != '' && !isNaN(currentValOz) ){ nutritionProtein.push({ item: proteinName, oz: currentValOz }); if ( nutritionProtein.length > 1 ) { nutritionProtein.shift(); } nutritionTable(); } else { nutritionProtein = []; nutritionTable(); } }
  if (obj.data.option.helpText == 'Proteinn'){ const proteinnName = obj.data.option.internalName.replace(/OZ|EACH|CUP|SLICE/gi,'').trim().toLocaleLowerCase(); if ( proteinnName != '' && currentValOz != '' && !isNaN(currentValOz) ){ nutritionProteinn.push({ item: proteinnName, oz: currentValOz }); if ( nutritionProteinn.length > 1 ) { nutritionProteinn.shift(); } nutritionTable(); } else { nutritionProteinn = []; nutritionTable(); } }
  if (obj.data.option.helpText == 'Carb'){ const carbName = obj.data.option.internalName.replace(/OZ|EACH|CUP|SLICE/gi,'').trim().toLocaleLowerCase(); if ( currentValOz === '1/4' && modifiedVal ) { currentValOz = 1; } if ( currentValOz === '1/2' && modifiedVal && carbName !== 'oatmeal' ) { currentValOz = 2; } if ( currentValOz === '1' && modifiedVal && carbName !== 'home style protein pancakes' && carbName !== 'oatmeal' ) { currentValOz = 4; } if ( currentValOz === '1.5' && modifiedVal ) { currentValOz = 6; } if ( currentValOz === '2' && modifiedVal && carbName !== 'home style protein pancakes' && carbName !== 'oatmeal'  ) { currentValOz = 8; } if ( carbName === 'oatmeal' && currentValOz === '1/2' && modifiedVal ) { currentValOz = 2; } if ( carbName === 'oatmeal' && currentValOz === '1' && modifiedVal ) { currentValOz = 4; } if ( carbName === 'oatmeal' && currentValOz === '2' && modifiedVal ) { currentValOz = 8; } if ( carbName != '' && currentValOz != '' && !isNaN(currentValOz)){ nutritionCarb.push({ item: carbName, oz: currentValOz }); if ( nutritionCarb.length > 1 ) { nutritionCarb.shift(); } nutritionTable(); } else { nutritionCarb = []; nutritionTable(); } }
  if (obj.data.option.helpText == 'Carbb'){ const carbbName = obj.data.option.internalName.replace(/OZ|EACH|CUP|SLICE/gi,'').trim().toLocaleLowerCase(); if ( currentValOz === '1/4' && modifiedVal  ) { currentValOz = 1; } if ( currentValOz === '1/2' && modifiedVal  ) { currentValOz = 2; } if ( currentValOz === '1' && modifiedVal ) { currentValOz = 4; } if ( currentValOz === '1.5' && modifiedVal ) { currentValOz = 6; } if ( currentValOz === '2' && modifiedVal ) { currentValOz = 8; } if ( carbbName != '' && currentValOz != '' && !isNaN(currentValOz)){ nutritionCarbb.push({ item: carbbName, oz: currentValOz }); if ( nutritionCarbb.length > 1 ) { nutritionCarbb.shift(); } nutritionTable(); } else { nutritionCarbb = []; nutritionTable(); } }
});