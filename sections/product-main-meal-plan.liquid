{% comment %}
  SECTION: Product Main Meal Plan (v4.2 - DIVIDER FIX)
  - DIVIDER FIX: Removed the redundant horizontal divider.
  REVISED: Updated price display logic to show before/after pricing for discounted variants.
{% endcomment %}

{%- liquid
  assign current_variant = product.selected_or_first_available_variant | default: product.first_available_variant
  assign current_item_in_cart = cart.items | where: 'variant_id', current_variant.id | first
  assign qty_in_cart = current_item_in_cart.quantity | default: 0
  assign included_meals = product.metafields.custom.included_meals.value | default: product.metafields.custom.meal_plan_products.value
-%}

<style>
  .meal-plan-premium-layout {
    --brand-primary: #2a9d8f;
    --brand-primary-light: #f0fdfa;
    --brand-primary-border: rgba(42, 157, 143, 0.4);
    --text-on-brand: #ffffff;
    --border-color-soft: #e9ecef;
    --background-soft: #f8f9fa;
    --text-primary: #212529;
    --text-secondary: #495057;
    --text-tertiary: #6c757d;
    --card-shadow: 0 28px 45px rgba(15, 23, 42, 0.08);
    --card-gradient: linear-gradient(135deg, #ffffff 0%, #f8fffb 55%, #f0fdfa 100%);
  }

  .meal-plan-premium-layout .meal-plan-hero-container {
    position: relative;
    background: var(--card-gradient);
    border: 1px solid rgba(42, 157, 143, 0.14);
    border-radius: 18px;
    padding: clamp(1.75rem, 4vw, 2.75rem);
    box-shadow: var(--card-shadow);
    overflow: hidden;
  }

  .meal-plan-premium-layout .meal-plan-hero-container::before,
  .meal-plan-premium-layout .meal-plan-hero-container::after {
    content: '';
    position: absolute;
    pointer-events: none;
    border-radius: 50%;
    opacity: 0.9;
  }

  .meal-plan-premium-layout .meal-plan-hero-container::before {
    inset: auto -35% 20% auto;
    width: 320px;
    height: 320px;
    background: radial-gradient(circle at center, rgba(42, 157, 143, 0.18) 0%, rgba(42, 157, 143, 0) 70%);
  }

  .meal-plan-premium-layout .meal-plan-hero-container::after {
    top: -120px;
    left: -120px;
    width: 220px;
    height: 220px;
    background: radial-gradient(circle at center, rgba(236, 72, 153, 0.12) 0%, rgba(236, 72, 153, 0) 70%);
  }

  .meal-plan-premium-layout .meal-plan-hero-grid {
    position: relative;
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    gap: clamp(2rem, 5vw, 3.5rem);
    align-items: start;
    z-index: 1;
  }

  @media (min-width: 1024px) {
    .meal-plan-premium-layout .meal-plan-hero-grid {
      grid-template-columns: minmax(0, 1fr) minmax(0, 420px);
    }
  }

  .meal-plan-premium-layout .meal-plan-hero__info {
    display: flex;
    flex-direction: column;
    gap: clamp(1.5rem, 3vw, 2rem);
    color: var(--text-secondary);
  }

  .meal-plan-premium-layout .meal-plan-hero__title {
    font-family: "Inter", "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif !important;
    font-size: clamp(2.4rem, 4vw, 3.1rem) !important;
    font-weight: 800 !important;
    line-height: 1.1 !important;
    letter-spacing: -0.025em !important;
    color: var(--text-primary) !important;
    margin: 0 !important;
  }

  .meal-plan-premium-layout .meal-plan-hero__bottomline {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-top: 0.5rem;
    color: var(--text-secondary);
    font-weight: 600;
  }

  .meal-plan-premium-layout .meal-plan-hero__bottomline .yotpo-bottomline {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .meal-plan-premium-layout .meal-plan-hero__bottomline .yotpo-stars {
    transform: translateY(-1px);
  }

  .meal-plan-premium-layout .meal-plan-description {
    padding-top: clamp(1.5rem, 3vw, 2rem);
    border-top: 1px solid rgba(33, 37, 41, 0.08);
    font-size: 1rem;
    line-height: 1.7;
    color: var(--text-secondary);
  }

  .meal-plan-premium-layout .meal-plan-description p:first-child { margin-top: 0; }
  .meal-plan-premium-layout .meal-plan-description p:last-child { margin-bottom: 0; }

  .meal-plan-premium-layout .meal-plan-contents {
    background: rgba(255, 255, 255, 0.65);
    border: 1px solid rgba(42, 157, 143, 0.14);
    border-radius: 18px;
    padding: clamp(1.25rem, 3vw, 1.75rem);
    box-shadow: 0 18px 35px rgba(15, 23, 42, 0.06);
    backdrop-filter: blur(2px);
  }

  .meal-plan-premium-layout .meal-plan-contents__title {
    margin: 0 0 1rem;
    font-size: 1.1rem;
    font-weight: 700;
    letter-spacing: -0.01em;
    color: var(--text-primary);
  }

  .meal-plan-premium-layout .meal-plan-contents__list {
    display: grid;
    gap: 0.75rem;
    list-style: none;
    margin: 0 0 1.25rem;
    padding: 0;
  }

  .meal-plan-premium-layout .meal-plan-contents__list li {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-weight: 600;
    color: var(--text-primary);
  }

  .meal-plan-premium-layout .meal-quantity-prefix {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 36px;
    padding: 0.35rem 0.75rem;
    border-radius: 999px;
    background: var(--brand-primary-light);
    border: 1px solid var(--brand-primary-border);
    color: var(--brand-primary);
    font-size: 0.85rem;
    font-weight: 700;
    transition: transform 0.25s ease, box-shadow 0.25s ease;
  }

  .meal-plan-premium-layout .meal-quantity-prefix.is-updating {
    transform: scale(1.08);
    box-shadow: 0 0 0 6px rgba(42, 157, 143, 0.12);
  }

  .meal-plan-premium-layout .meal-plan-contents__disclaimer {
    margin: 0;
    font-size: 0.85rem;
    color: var(--text-tertiary);
  }

  .meal-plan-premium-layout .meal-plan-hero__form {
    position: relative;
  }

  .meal-plan-premium-layout .meal-plan-form-card {
    position: relative;
    background: var(--card-gradient);
    border: 1px solid rgba(42, 157, 143, 0.18);
    border-radius: 18px;
    padding: clamp(1.5rem, 3vw, 2rem);
    box-shadow: var(--card-shadow);
    display: flex;
    flex-direction: column;
    gap: clamp(1.5rem, 3vw, 2rem);
  }

  .meal-plan-premium-layout .meal-plan-form-card::after {
    content: '';
    position: absolute;
    inset: auto -20% -40px auto;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    background: radial-gradient(circle at center, rgba(42, 157, 143, 0.12) 0%, rgba(42, 157, 143, 0) 70%);
    pointer-events: none;
  }

  .meal-plan-premium-layout .meal-plan-form__options {
    display: flex;
    flex-direction: column;
    gap: clamp(1.25rem, 2vw, 1.75rem);
  }

  .meal-plan-premium-layout .meal-plan-form__option-group {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .meal-plan-premium-layout .meal-plan-form__option-group label {
    font-size: 0.85rem;
    font-weight: 700;
    letter-spacing: 0.08em;
    text-transform: uppercase;
    color: var(--text-tertiary);
  }

  .meal-plan-premium-layout .select-wrapper {
    position: relative;
    display: inline-flex;
    width: 100%;
    align-items: center;
    background: #ffffff;
    border: 1px solid rgba(15, 23, 42, 0.08);
    border-radius: 12px;
    box-shadow: inset 0 1px 2px rgba(255, 255, 255, 0.6), 0 12px 30px rgba(15, 23, 42, 0.06);
    padding: 0 0.75rem;
    padding-right: 2.75rem;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
  }

  .meal-plan-premium-layout .select-wrapper:focus-within {
    border-color: rgba(42, 157, 143, 0.45);
    box-shadow: 0 0 0 4px rgba(42, 157, 143, 0.15);
  }

  .meal-plan-premium-layout .select-wrapper select {
    appearance: none;
    -webkit-appearance: none;
    width: 100%;
    padding: 0.85rem 0.25rem;
    border: none;
    background: transparent;
    font-size: 1rem;
    font-weight: 600;
    color: var(--text-primary);
    line-height: 1.4;
  }

  .meal-plan-premium-layout .select-wrapper select:focus {
    outline: none;
  }

  .meal-plan-premium-layout .select-wrapper__arrow {
    position: absolute;
    top: 50%;
    right: 1rem;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    stroke: var(--text-tertiary);
    stroke-width: 2.5;
    pointer-events: none;
  }

  .meal-plan-premium-layout .meal-plan-form__footer {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding-top: clamp(1.25rem, 2vw, 1.5rem);
    border-top: 1px solid rgba(33, 37, 41, 0.08);
  }

  .meal-plan-premium-layout .meal-plan-form__price {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex-wrap: wrap;
    margin: 0;
  }

  .meal-plan-premium-layout .price-chip {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.55rem 1.25rem;
    border-radius: 999px;
    background: #ffffff;
    border: 1px solid rgba(15, 23, 42, 0.1);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05), 0 8px 20px rgba(15, 23, 42, 0.08);
    font-size: clamp(1.2rem, 2vw, 1.5rem);
    font-weight: 800;
    color: #0f172a;
    transition: border-color 0.2s ease, box-shadow 0.2s ease, color 0.2s ease;
  }

  .meal-plan-premium-layout .price-chip--live {
    border-color: rgba(42, 157, 143, 0.3);
    color: #0b3a34;
    box-shadow: inset 0 1px 2px rgba(42, 157, 143, 0.1), 0 10px 25px rgba(42, 157, 143, 0.12);
  }

  .meal-plan-premium-layout .price-chip--sold-out {
    border-color: rgba(220, 53, 69, 0.35);
    color: #842029;
    box-shadow: inset 0 1px 2px rgba(220, 53, 69, 0.15), 0 10px 25px rgba(220, 53, 69, 0.12);
  }

  .meal-plan-premium-layout .price-chip__compare {
    color: var(--text-tertiary);
    font-size: 0.9em;
    font-weight: 600;
    text-decoration: line-through;
    opacity: 0.85;
  }

  .meal-plan-premium-layout .price-chip__primary {
    display: inline-flex;
    align-items: baseline;
    gap: 0.25rem;
  }

  .meal-plan-premium-layout .meal-plan-form__actions {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .meal-plan-premium-layout .product-card__add-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    width: 100%;
    padding: 0.9rem 1.25rem;
    border-radius: 14px;
    border: 1px solid transparent !important;
    background: linear-gradient(135deg, var(--brand-primary) 0%, #1f766b 100%) !important;
    color: var(--text-on-brand) !important;
    font-weight: 700;
    font-size: 1rem;
    text-transform: none !important;
    letter-spacing: -0.01em !important;
    transition: transform 0.2s ease, box-shadow 0.2s ease, filter 0.2s ease;
    box-shadow: 0 14px 28px rgba(31, 118, 107, 0.22) !important;
  }

  .meal-plan-premium-layout .product-card__add-btn:hover,
  .meal-plan-premium-layout .product-card__add-btn:focus-visible {
    transform: translateY(-1px);
    box-shadow: 0 18px 32px rgba(31, 118, 107, 0.3) !important;
  }

  .meal-plan-premium-layout .product-card__add-btn svg {
    stroke-width: 2.2;
  }

  .meal-plan-premium-layout .product-form--quick-add.is-loading .product-card__add-btn {
    opacity: 0.7;
    pointer-events: none;
  }

  .meal-plan-premium-layout .integrated-quantity {
    display: none;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    padding: 0.75rem 1rem;
    border-radius: 14px;
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid rgba(42, 157, 143, 0.2);
    box-shadow: inset 0 1px 2px rgba(42, 157, 143, 0.08), 0 12px 24px rgba(42, 157, 143, 0.08);
    font-weight: 700;
    color: var(--brand-primary);
  }

  .meal-plan-premium-layout .integrated-quantity__button {
    border: none;
    background: transparent;
    font-size: 1.25rem;
    font-weight: 700;
    color: inherit;
    cursor: pointer;
    transition: color 0.2s ease;
  }

  .meal-plan-premium-layout .integrated-quantity__button:hover,
  .meal-plan-premium-layout .integrated-quantity__button:focus-visible {
    color: #155f55;
  }

  .meal-plan-premium-layout .integrated-quantity__input {
    display: none;
  }

  .meal-plan-premium-layout .integrated-quantity__text {
    min-width: 2rem;
    text-align: center;
  }

  .meal-plan-premium-layout .meal-plan-form__footer > *:last-child {
    margin-top: 0.5rem;
  }

  .meal-plan-premium-layout .meal-plan-form__price + .meal-plan-form__actions {
    margin-top: 0.5rem;
  }

  .meal-plan-premium-layout .meal-plan-hero-container .meal-plan-promo-breadcrumb {
    font-size: 0.85rem;
    color: var(--text-secondary);
  }

  .meal-plan-premium-layout .meal-plan-grid-wrapper {
    background: var(--background-soft);
  }

  .meal-plan-premium-layout .meal-plan-grid__item {
    border-radius: 18px;
    border: 1px solid rgba(15, 23, 42, 0.08);
    box-shadow: 0 16px 32px rgba(15, 23, 42, 0.06);
  }

  .meal-plan-premium-layout .pdp-reviews-fullwidth {
    padding: clamp(3rem, 6vw, 4rem) 0;
    background: #ffffff;
  }

  .meal-plan-premium-layout .pdp-reviews__inner {
    max-width: min(1100px, 90vw);
    margin: 0 auto;
  }

  .meal-plan-premium-layout .pdp-reviews__heading {
    font-size: clamp(1.75rem, 3vw, 2.25rem);
    font-weight: 800;
    text-align: center;
    color: var(--text-primary);
  }

  @media (max-width: 991px) {
    .meal-plan-premium-layout .meal-plan-hero-container {
      padding: clamp(1.5rem, 5vw, 2.25rem);
      border-radius: 14px;
    }

    .meal-plan-premium-layout .meal-plan-form-card {
      padding: clamp(1.25rem, 4vw, 1.75rem);
    }
  }

  @media (max-width: 749px) {
    .meal-plan-premium-layout {
      padding-bottom: 2rem;
    }

    .meal-plan-premium-layout .meal-plan-hero-container {
      margin: 0 -1rem;
      border-radius: 0;
    }

    .meal-plan-premium-layout .meal-plan-hero__bottomline {
      justify-content: flex-start;
    }

    .meal-plan-premium-layout .meal-plan-contents {
      border-radius: 16px;
    }
  }
</style>

<div class="meal-plan-premium-layout">
  
  <div class="meal-plan-hero-container">
    <div class="meal-plan-hero-grid">

      {% comment %} --- LEFT COLUMN: INFO --- {% endcomment %}
      <div class="meal-plan-hero__info">
        <h1 class="meal-plan-hero__title">{{ product.title }}</h1>
        <div class="meal-plan-hero__bottomline">
          <div
            class="yotpo yotpo-bottomline"
            data-product-id="{{ product.id }}"
            data-name="{{ product.title | escape }}"
            data-url="{{ shop.url }}{{ product.url }}"
          ></div>
        </div>

        {%- if product.description != blank -%}
          <div class="meal-plan-description rte">
            {{ product.description }}
          </div>
        {%- endif -%}

        {%- if included_meals != blank -%}
          <div class="meal-plan-contents">
            <h3 class="meal-plan-contents__title">What's In Your Plan</h3>
            <ul class="meal-plan-contents__list" data-dynamic-meal-list>
              {%- assign num_meal_types = included_meals | size -%}
              {%- assign total_meals = current_variant.option1 | split: ' ' | first | times: 1 -%}
              {%- assign qty_per_meal = total_meals | divided_by: num_meal_types -%}
              {%- for meal in included_meals -%}
                <li>
                  <span class="meal-quantity-prefix">{{ qty_per_meal }}x</span>
                  <span class="meal-title-text">{{- meal.title -}}</span>
                </li>
              {%- endfor -%}
            </ul>
            <p class="meal-plan-contents__disclaimer">
              Due to a routinely updating menu, subscription items in this meal plan are subject to change.
            </p>
          </div>
        {%- endif -%}
      </div>

      {% comment %} --- RIGHT COLUMN: FORM --- {% endcomment %}
      <div class="meal-plan-hero__form">
        <div class="meal-plan-form-card" data-main-product-form-container>
          <div class="meal-plan-form__options">
            {%- unless product.has_only_default_variant -%}
              {%- for option in product.options_with_values -%}
                <div class="meal-plan-form__option-group">
                  <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                  <div class="select-wrapper">
                    <select id="Option-{{ section.id }}-{{ forloop.index0 }}" name="options[{{ option.name | escape }}]">
                      {%- for value in option.values -%}<option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>{{ value }}</option>{%- endfor -%}
                    </select>
                    <svg class="select-wrapper__arrow" viewBox="0 0 24 24"><polyline points="6 9 12 15 18 9"></polyline></svg>
                  </div>
                </div>
              {%- endfor -%}
            {%- endunless -%}

            <div class="rc-widget-injection-parent"></div>
            {% render 'recharge-bundle' %}
          </div>

          <div class="meal-plan-form__footer">
            <div class="meal-plan-form__price">
              <div class="price-chip{% if current_variant.available %} price-chip--live{% endif %}" data-product-price>
                <span class="price-chip__primary">{{ current_variant.price | money }}</span>
              </div>
            </div>
            {% render 'meal-plan-promo-breadcrumb', context: 'pdp' %}

            <div class="meal-plan-form__actions">
              <product-form class="product-form--quick-add product-form--full-width" data-state="{% if qty_in_cart > 0 %}active{% else %}initial{% endif %}">
                <input type="hidden" name="id" value="{{ current_variant.id }}" data-variant-id>
                
                <button type="button" class="product-card__add-btn alt-focus">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg>
                  <span>Add</span>
                </button>

                <div class="integrated-quantity" data-product-id="{{ product.id }}">
                  <button type="button" class="integrated-quantity__button" name="minus" aria-label="Decrease quantity">－</button>
                  <span class="integrated-quantity__text" aria-live="polite">{{ qty_in_cart | default: 1 }}</span>
                  <input
                    is="quantity-input"
                    class="integrated-quantity__input"
                    type="number"
                    name="quantity"
                    value="{{ qty_in_cart }}"
                    min="0"
                    aria-label="Quantity"
                    data-quantity-input
                  >
                  <button type="button" class="integrated-quantity__button" name="plus" aria-label="Increase quantity">＋</button>
                </div>
              </product-form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  {% render 'meal-plan-grid', product: product %}

  {% render 'product-reviews-fullwidth', heading: 'Customer Reviews', boxed_container: false %}

</div>

{%- render 'footer-minimal-ordering' -%}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const productMain = document.querySelector('.meal-plan-premium-layout');
    if (!productMain) return;
    
    const formContainer = productMain.querySelector('[data-main-product-form-container]');
    if (!formContainer) return;

    const optionSelectors = formContainer.querySelectorAll('.meal-plan-form__option-group select');
    const productDataEl = document.querySelector('[data-product-json-{{ section.id }}]');
    const includedMealsDataEl = document.querySelector('[data-included-meals-json-{{ section.id }}]');
    const priceEl = formContainer.querySelector('[data-product-price]');
    const productFormCta = formContainer.querySelector('product-form');

    // New element selectors for dynamic quantities
    const dynamicMealList = productMain.querySelector('[data-dynamic-meal-list]');
    const quantityCallouts = document.querySelectorAll('[data-meal-quantity-callout]');

    if (productDataEl) {
      const productData = JSON.parse(productDataEl.textContent);
      const includedMeals = includedMealsDataEl ? JSON.parse(includedMealsDataEl.textContent) : [];
      
      const updateVariantId = () => {
        const selectedOptions = Array.from(optionSelectors).map(sel => sel.value);
        const matchedVariant = productData.variants.find(variant => {
          if (variant.options.length !== selectedOptions.length) return false;
          return variant.options.every((opt, idx) => opt === selectedOptions[idx]);
        });

        if (matchedVariant) {
          // Update Add to Cart form
          if (productFormCta) {
            const variantInput = productFormCta.querySelector('[data-variant-id]');
            if (variantInput) {
              variantInput.value = matchedVariant.id;
              variantInput.dispatchEvent(new Event('change', { bubbles: true }));
            }
            productFormCta.variantId = matchedVariant.id;
          }

          // Update price display
          if (priceEl) {
            const moneyFormat = {{ shop.money_format | json }};
            const formatMoney = (value) => {
              if (window.Shopify && typeof window.Shopify.formatMoney === 'function') {
                return window.Shopify.formatMoney(value, moneyFormat);
              }

              const placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
              const match = moneyFormat.match(placeholderRegex);
              const cents = typeof value === 'string' ? value.replace(/[^0-9]/g, '') : value;
              const amount = Number(cents) / 100;

              let formatted;
              switch (match && match[1]) {
                case 'amount_no_decimals':
                  formatted = Math.round(amount).toString();
                  break;
                case 'amount_with_comma_separator':
                  formatted = amount.toFixed(2).replace('.', ',');
                  break;
                case 'amount_no_decimals_with_comma_separator':
                  formatted = Math.round(amount).toString().replace('.', ',');
                  break;
                case 'amount_no_decimals_with_space_separator':
                  formatted = Math.round(amount).toString().replace('.', ' ');
                  break;
                case 'amount_with_space_separator':
                  formatted = amount.toFixed(2).replace('.', ' ');
                  break;
                case 'amount_with_apostrophe_separator':
                  formatted = amount.toFixed(2).replace('.', "'");
                  break;
                default:
                  formatted = amount.toFixed(2);
              }

              return moneyFormat.replace(placeholderRegex, formatted);
            };

            let priceHtml = '';
            if (matchedVariant.compare_at_price && matchedVariant.compare_at_price > matchedVariant.price) {
              priceHtml += `<del class="price-chip__compare">${formatMoney(matchedVariant.compare_at_price)}</del>`;
            }
            priceHtml += `<span class="price-chip__primary">${formatMoney(matchedVariant.price)}</span>`;
            priceEl.innerHTML = priceHtml;
            priceEl.classList.toggle('price-chip--live', Boolean(matchedVariant.available));
            priceEl.classList.toggle('price-chip--sold-out', !matchedVariant.available);
          }

          // NEW: Update Meal Quantities
          if (includedMeals.length > 0) {
            const totalMeals = parseInt(matchedVariant.option1.split(' ')[0], 10);
            const numMealTypes = includedMeals.length;
            const qtyPerMeal = totalMeals / numMealTypes;
            const animationDuration = 400;

            if (Number.isInteger(qtyPerMeal) && qtyPerMeal > 0) {
              // Update and animate list
              if (dynamicMealList) {
                let listHtml = '';
                includedMeals.forEach(mealTitle => {
                  listHtml += `<li><span class="meal-quantity-prefix">${qtyPerMeal}x</span><span class="meal-title-text">${mealTitle}</span></li>`;
                });
                dynamicMealList.innerHTML = listHtml;
                dynamicMealList.querySelectorAll('.meal-quantity-prefix').forEach(prefix => {
                  prefix.classList.add('is-updating');
                  setTimeout(() => prefix.classList.remove('is-updating'), animationDuration);
                });
              }
              // Update and animate callouts
              if (quantityCallouts) {
                quantityCallouts.forEach(callout => {
                  callout.textContent = `${qtyPerMeal}x`;
                  callout.style.display = 'flex';
                  callout.classList.add('is-updating');
                  setTimeout(() => callout.classList.remove('is-updating'), animationDuration);
                });
              }
            }
          }
        }
      };
      
      optionSelectors.forEach(select => select.addEventListener('change', updateVariantId));
      if (optionSelectors.length > 0) {
        updateVariantId();
      }
    }

    const quickAddForm = formContainer.querySelector('.product-form--quick-add');
    const addBtn = quickAddForm?.querySelector('.product-card__add-btn');
    if (quickAddForm && addBtn) {
      quickAddForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        quickAddForm.classList.add('is-loading');
        addBtn.disabled = true;
        try {
          const formData = new FormData(quickAddForm);
          const res = await fetch('/cart/add.js', { method: 'POST', body: formData });
          if (!res.ok) throw new Error(await res.text());
          const cart = await res.json();
          document.dispatchEvent(new CustomEvent('cart:updated', { detail: { cart } }));
        } catch (error) {
          console.error('Error adding to cart:', error);
        } finally {
          quickAddForm.classList.remove('is-loading');
          setTimeout(() => { addBtn.disabled = false; }, 1500);
        }
      });
    }

    const uniqueAnchor = () => {
      const anchors = Array.from(document.querySelectorAll('#yotpo-main-widget'));
      if (anchors.length > 1) {
        anchors.slice(1).forEach((anchor) => anchor.remove());
      }
    };

    const coerceYotpoHref = () => {
      const selectors = [
        '.yotpo.bottomLine a[href^="#"]',
        '.yotpo-widget-instance a[href^="#"]',
      ];

      selectors.forEach((selector) => {
        document.querySelectorAll(selector).forEach((link) => {
          if (link.getAttribute('href') !== '#yotpo-main-widget') {
            link.setAttribute('href', '#yotpo-main-widget');
          }
        });
      });
    };

    const hydrateYotpo = () => {
      if (window.Yotpo) {
        const fn = window.Yotpo.refreshWidgets || window.Yotpo.initWidgets;
        if (typeof fn === 'function') {
          fn.call(window.Yotpo);
        }
      }
    };

    const wireSmoothScroll = () => {
      const selector = '.yotpo.bottomLine a[href^="#"], .yotpo-widget-instance a[href^="#"]';
      document.addEventListener('click', (event) => {
        const link = event.target.closest(selector);
        if (!link) return;

        const targetId = link.getAttribute('href').replace(/^#/, '');
        if (!targetId) return;

        const target = document.getElementById(targetId);
        if (!target) return;

        event.preventDefault();

        const prefersReducedMotion = typeof window.matchMedia === 'function' && window.matchMedia('(prefers-reduced-motion: reduce)').matches;

        target.scrollIntoView({
          behavior: prefersReducedMotion ? 'auto' : 'smooth',
          block: 'start'
        });

        if (history.replaceState) {
          history.replaceState(null, '', `#${targetId}`);
        } else {
          window.location.hash = targetId;
        }
      }, { passive: false });
    };

    uniqueAnchor();
    coerceYotpoHref();
    hydrateYotpo();
    wireSmoothScroll();

    document.addEventListener('shopify:section:load', () => {
      uniqueAnchor();
      coerceYotpoHref();
      hydrateYotpo();
    });

    document.addEventListener('yotpo:widgetLoaded', () => {
      uniqueAnchor();
      coerceYotpoHref();
    });
  });
</script>

<script type="application/json" data-product-json-{{ section.id }}>{{ product | json }}</script>
<script type="application/json" data-included-meals-json-{{ section.id }}>
  {%- if included_meals != blank -%}
    {{ included_meals | map: 'title' | json }}
  {%- else -%}
    []
  {%- endif -%}
</script>

{% schema %}
{
  "name": "Product Main Meal Plan",
  "tag": "section",
  "class": "product-main-meal-plan-section"
}
{% endschema %}