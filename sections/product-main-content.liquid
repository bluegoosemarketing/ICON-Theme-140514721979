{% comment %}
<!--
************************************************************************************
*
*  Product Page - Main Content (v18.0 - DEFINITIVE HIERARCHY & UX)
*  --------------------------------------------------------------------------------
*  - DIAGNOSIS: The "What's Inside" and "Full Ingredients" sections were redundant
*    and confusingly labeled.
*  - THE FIX (EXPERT UX REFINEMENT):
*    1. NESTED STRUCTURE: The "Full Ingredients" list is now a collapsible
*       dropdown nested *inside* the "What's Inside" card. This creates a clear
*       and logical information hierarchy.
*    2. CLARIFIED LABELS: The main section is "What's Inside" (the simple
*       breakdown), and the dropdown trigger is now clearly labeled "View Full
*       Ingredient List," eliminating user confusion.
*    3. INTEGRATED STYLING: The new dropdown is styled as a subtle, elegant
*       expander, feeling like a natural extension of the "What's Inside" card
*       rather than a separate block. This is the final, world-class version.
*
************************************************************************************
-->
{% endcomment %}

{%- liquid
  assign current_variant = product.selected_or_first_available_variant | default: product.first_available_variant
  assign featured_image = current_variant.featured_image | default: product.featured_image
  assign macros = product.metafields.macros
  assign nutrition = product.metafields.nutrition
  assign macros_exist = false
  if macros.macros_calories != blank or macros.macros_protein != blank or macros.macros_carbs != blank or macros.macros_fats != blank or macros.macros_fiber != blank or macros.macros_sodium != blank
    assign macros_exist = true
  endif
  assign ingredient_highlights = product.metafields.custom.ingredient_highlights
-%}

{% if template contains 'product' %}
<script type="application/ld+json">
{
  "@context": "https://schema.org/",
  "@type": "Product",
  "name": {{ product.title | json }},
  "image": [{% for image in product.images %}{{ image | image_url: width: 1200 | json }}{% unless forloop.last %}, {% endunless %}{% endfor %}],
  "description": {{ product.description | strip_html | json }},
  "sku": {{ product.selected_or_first_available_variant.sku | json }},
  "brand": { "@type": "Brand", "name": "ICON Meals" },
  "nutrition": {
    "@type": "NutritionInformation",
    {% assign m = product.metafields.macros %}
    {% if m.macros_calories != blank %}
      "calories": {{ m.macros_calories | append: ' calories' | json }}
    {% endif %}
    {% if m.macros_protein != blank %}
      {% if m.macros_calories != blank %}, {% endif %}"proteinContent": {{ m.macros_protein | append: ' g' | json }}
    {% endif %}
    {% if m.macros_carbs != blank %}
      {% if m.macros_calories != blank or m.macros_protein != blank %}, {% endif %}"carbohydrateContent": {{ m.macros_carbs | append: ' g' | json }}
    {% endif %}
    {% if m.macros_fats != blank %}
      {% if m.macros_calories != blank or m.macros_protein != blank or m.macros_carbs != blank %}, {% endif %}"fatContent": {{ m.macros_fats | append: ' g' | json }}
    {% endif %}
    {% if m.macros_fiber != blank %}
      {% if m.macros_calories != blank or m.macros_protein != blank or m.macros_carbs != blank or m.macros_fats != blank %}, {% endif %}"fiberContent": {{ m.macros_fiber | append: ' g' | json }}
    {% endif %}
    {% if m.macros_sodium != blank %}
      {% if m.macros_calories != blank or m.macros_protein != blank or m.macros_carbs != blank or m.macros_fats != blank or m.macros_fiber != blank %}, {% endif %}"sodiumContent": {{ m.macros_sodium | append: ' mg' | json }}
    {% endif %}
  },
  "offers": {
    "@type": "Offer",
    "url": {{ request.origin | append: product.url | json }},
    "priceCurrency": {{ localization.country.currency.iso_code | default: cart.currency.iso_code | default: shop.currency | json }},
    "price": {{ current_variant.price | divided_by: 100.0 | json }},
    "itemCondition": "https://schema.org/NewCondition"
  }
}
</script>
{% endif %}

<style>
  :root{
    --macro-color-calories:#6c757d;
    --macro-color-protein:#2a9d8f;
    --macro-color-carbs:#e9c46a;
    --macro-color-fats:#8ab17d;
    --macro-color-fiber:#b58db6;
    --macro-color-sodium:#f4a261;
  }

  #product-main-{{ section.id }}{
    --macro-color-calories:#6c757d;
    --macro-color-protein:#2a9d8f;
    --macro-color-carbs:#e9c46a;
    --macro-color-fats:#8ab17d;
    --macro-color-fiber:#b58db6;
    --macro-color-sodium:#f4a261;
  }

  /* Core Layout */
  #product-main-{{ section.id }} .product-main__layout{display:flex;flex-direction:column;gap:1.5rem;padding:1.5rem 1.2rem;}
  #product-main-{{ section.id }} .product-main__visuals-wrapper,
  #product-main-{{ section.id }} .product-main__info-column{display:flex;flex-direction:column;gap:1.5rem;}

  /* 1. The "Hook" Card */
  #product-main-{{ section.id }} .product-intro-card {background:#fff;border:1px solid #e9ecef;border-radius:12px;padding:1.5rem;display:flex;flex-direction:column;gap:1.5rem;}
  #product-main-{{ section.id }} .product-main__header{display:flex;flex-direction:column;gap:0.25rem;}
  #product-main-{{ section.id }} .product-main__title{font-family:system-ui,-apple-system,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif!important;font-size:1.75rem!important;font-weight:800!important;line-height:1.2!important;color:#212529!important;letter-spacing:-0.02em;margin:0;}
  #product-main-{{ section.id }} .product-main__price{display:flex;flex-direction:row;align-items:center;gap:.5rem;font-size:1.5rem;font-weight:700;color:#343a40;transition:all .18s ease;}
  #product-main-{{ section.id }} .product-main__price.price--live{background:transparent;border:0;padding:0;font-weight:800;font-size:1.75rem;color:#111827;}
#product-main-{{ section.id }} .product-main__price.price--live .price-note{font-size:.875rem;font-weight:600;color:#6b7280;margin-left:.5rem;}
  #product-main-{{ section.id }} .product-description{margin:0;color:#24303f;font-size:1.02rem;line-height:1.7;}
  #product-main-{{ section.id }} .product-highlights{padding-top:1.5rem;border-top:1px solid #e9ecef;}
  #product-main-{{ section.id }} .product-highlights__title{margin:0 0 1rem;font-size:1rem;font-weight:700;letter-spacing:.03em;text-transform:uppercase;color:#343a40;}
  #product-main-{{ section.id }} .product-highlights ul{margin:0;padding-left:1.25rem;display:flex;flex-direction:column;gap:.5rem;}
  #product-main-{{ section.id }} .product-highlights li{font-size:.97rem;color:#2c3a4b;line-height:1.55;}

  /* Visuals Column */
  #product-main-{{ section.id }} .product-main__gallery-image{width:100%;height:auto;border-radius:12px;border:1px solid #e9ecef;box-shadow:0 4px 12px rgba(0,0,0,.05);}
  #product-main-{{ section.id }} .product-macros-block{display:grid;grid-template-columns:1fr 1fr;gap:0.75rem;border:1px solid #e9ecef;border-radius:12px;overflow:hidden;padding:0.75rem;}
  #product-main-{{ section.id }} .macro-stat{padding:1rem .5rem;text-align:center;background-color:#f8f9fa;border-radius:8px;border-top-width:4px;border-top-style:solid;}
  #product-main-{{ section.id }} .macro-stat--secondary{grid-column:1 / -1;display:grid;grid-template-columns:repeat(4,1fr);gap:0.75rem;margin-top:0;}
  #product-main-{{ section.id }} .macro-stat--calories{border-top-color:var(--macro-color-calories);}
  #product-main-{{ section.id }} .macro-stat--protein{border-top-color:var(--macro-color-protein);}
  #product-main-{{ section.id }} .macro-stat--carbs{border-top-color:var(--macro-color-carbs);}
  #product-main-{{ section.id }} .macro-stat--fats{border-top-color:var(--macro-color-fats);}
  #product-main-{{ section.id }} .macro-stat--fiber{border-top-color:var(--macro-color-fiber);}
  #product-main-{{ section.id }} .macro-stat--sodium{border-top-color:var(--macro-color-sodium);}
  #product-main-{{ section.id }} .macro-stat__value{font-size:1.1rem;font-weight:700;color:#212529;line-height:1.2;display:block;margin-bottom:.25rem;}
  #product-main-{{ section.id }} .macro-stat__label{font-size:.7rem;color:#6c757d;text-transform:uppercase;letter-spacing:.05em;display:block;}
  #product-main-{{ section.id }} .macro-stat--primary .macro-stat__value {font-size: 1.5rem;}
  #product-main-{{ section.id }} .macro-stat--primary .macro-stat__label {font-size: 0.8rem;}

  /* 2. The "Action" Card */
  #product-main-{{ section.id }} .product-main__form{border:1px solid #e9ecef;border-radius:12px;background:#fff;padding:1.5rem;display:flex;flex-direction:column;gap:1.5rem;}
  #product-main-{{ section.id }} .product-main__options .rc-widget-injection-parent > div {display:flex;flex-direction:column;gap:0.75rem;}
  #product-main-{{ section.id }} .product-main__options .rc-option {border:2px solid #e9ecef;border-radius:10px;padding:1rem;cursor:pointer;transition:all 0.2s ease;}
  #product-main-{{ section.id }} .product-main__options .rc-option:hover {border-color:#ced4da;}
  #product-main-{{ section.id }} .product-main__options .rc-option.rc-option--active {border-color:var(--brand-accent);background-color:#f7fdfa;box-shadow:none;}
  #product-main-{{ section.id }} .product-main__options .rc-option__selector {margin-right:1rem;}
  #product-main-{{ section.id }} .product-main__options .rc-option-wrapper {display:flex;align-items:center;}
  #product-main-{{ section.id }} .product-main__options .rc-option__title {font-weight:600;font-size:1rem;color:#212529;}
  #product-main-{{ section.id }} .product-main__options .rc-option__price {font-weight:700;font-size:1.1rem;margin-left:auto;color:#212529;}
  #product-main-{{ section.id }} .product-main__actions{display:grid;grid-template-columns:120px 1fr;gap:1rem;align-items:center;}

  /* 3. The "Reference" Cards */
  #product-main-{{ section.id }} .product-visible-details{display:flex;flex-direction:column;gap:1.5rem;}
  #product-main-{{ section.id }} .product-detail-block {border:1px solid #e9ecef;border-radius:12px;background:#fff;padding:1.5rem;}
  #product-main-{{ section.id }} .product-detail-block h3{margin:0 0 1rem;font-size:1.1rem;font-weight:700;color:#343a40;text-transform:uppercase;letter-spacing:.05em;}
  #product-main-{{ section.id }} .product-detail-block .rte{color:#495057;line-height:1.6;}
  #product-main-{{ section.id }} .meal-component{margin-bottom:1.25rem;}
  #product-main-{{ section.id }} .meal-component:last-child{margin-bottom:0;}
  #product-main-{{ section.id }} .meal-component strong{display:block;margin-bottom:.35rem;color:#212529;font-weight:600;}
  #product-main-{{ section.id }} .meal-component p{margin:0;color:#495057;line-height:1.5;}

  /* --- DEFINITIVE FIX: Styles for the nested "Full Ingredients" dropdown --- */
  #product-main-{{ section.id }} .full-ingredients-collapsible {
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid #e9ecef;
  }
  #product-main-{{ section.id }} .full-ingredients-collapsible summary {
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    list-style: none;
    font-weight: 600;
    color: #495057;
    transition: color 0.2s ease;
  }
  #product-main-{{ section.id }} .full-ingredients-collapsible summary:hover {color: #212529;}
  #product-main-{{ section.id }} .full-ingredients-collapsible summary::-webkit-details-marker {display: none;}
  #product-main-{{ section.id }} .full-ingredients-collapsible[open] > summary {margin-bottom: 1rem;}
  #product-main-{{ section.id }} .full-ingredients-collapsible .collapsible-icon {width: 1rem; height: 1rem; transition: transform 0.2s ease-in-out;}
  #product-main-{{ section.id }} .full-ingredients-collapsible[open] > summary .collapsible-icon {transform: rotate(180deg);}
  #product-main-{{ section.id }} .full-ingredients-collapsible .rte {font-size: 0.9rem; color: #6c757d;} /* Slightly smaller text for the legal list */

  /* Reviews Block */
  #product-main-{{ section.id }} .product-reviews{border:1px solid #e9ecef;border-radius:12px;background:#fff;padding:2rem 1.75rem;}
  #product-main-{{ section.id }} .product-reviews h2{margin:0 0 1rem;font-size:1.5rem;font-weight:700;color:#1f2937;}

  /* Desktop Layout */
  @media (min-width:1024px){
    #product-main-{{ section.id }} .product-main__layout{display:grid;grid-template-columns:45fr 55fr;grid-template-areas:"visuals info";gap:3rem;padding:1.5rem 0;}
    #product-main-{{ section.id }} .product-main__visuals-wrapper{grid-area:visuals;position:sticky;top:1.5rem;}
    #product-main-{{ section.id }} .product-main__info-column{grid-area:info;}
    #product-main-{{ section.id }} .product-intro-card {padding: 2rem;}
    #product-main-{{ section.id }} .product-main__title{font-size:2.25rem!important;}
    #product-main-{{ section.id }} .product-main__price.price--live{font-size:1.75rem;}
    #product-main-{{ section.id }} .macro-stat__value{font-size:1.25rem;}
    #product-main-{{ section.id }} .macro-stat__label{font-size:.75rem;}
  }

  @media (max-width:767px){
    #product-main-{{ section.id }} .product-main__price.price--live{font-size:1.5rem;}
  }
</style>

<div id="product-main-{{ section.id }}" class="product-main" data-section-id="{{ section.id }}">
  <div class="product-main__layout">
    <div class="product-main__visuals-wrapper">
      <div class="product-main__gallery">
        {%- if featured_image -%}
          <img src="{{ featured_image | image_url: width: 800, height: 800, crop: 'center' }}" alt="{{ featured_image.alt | escape }}" class="product-main__gallery-image" loading="eager" width="800" height="{{ 800 | divided_by: featured_image.aspect_ratio | round }}">
        {%- endif -%}
      </div>
      {%- if macros_exist -%}
        <div class="product-macros-block">
          {%- if macros.macros_calories != blank -%}<div class="macro-stat macro-stat--primary macro-stat--calories"><span class="macro-stat__value">{{ macros.macros_calories }}</span><span class="macro-stat__label">Calories</span></div>{%- endif -%}
          {%- if macros.macros_protein != blank -%}<div class="macro-stat macro-stat--primary macro-stat--protein"><span class="macro-stat__value">{{ macros.macros_protein }}g</span><span class="macro-stat__label">Protein</span></div>{%- endif -%}
          <div class="macro-stat--secondary">
              {%- if macros.macros_carbs != blank -%}<div class="macro-stat macro-stat--carbs"><span class="macro-stat__value">{{ macros.macros_carbs }}g</span><span class="macro-stat__label">Carbs</span></div>{%- endif -%}
              {%- if macros.macros_fats != blank -%}<div class="macro-stat macro-stat--fats"><span class="macro-stat__value">{{ macros.macros_fats }}g</span><span class="macro-stat__label">Fats</span></div>{%- endif -%}
              {%- if macros.macros_fiber != blank -%}<div class="macro-stat macro-stat--fiber"><span class="macro-stat__value">{{ macros.macros_fiber }}g</span><span class="macro-stat__label">Fiber</span></div>{%- endif -%}
              {%- if macros.macros_sodium != blank -%}<div class="macro-stat macro-stat--sodium"><span class="macro-stat__value">{{ macros.macros_sodium }}mg</span><span class="macro-stat__label">Sodium</span></div>{%- endif -%}
          </div>
        </div>
      {%- endif -%}
      <div id="nutrition-container"></div>
    </div>

    <div class="product-main__info-column">
      <!-- 1. The "Hook" Card -->
      <div class="product-intro-card">
        <div class="product-main__header">
          <h1 class="product-main__title">
            {% if product.handle == 'custom-meals' %}
              Build Custom Meals
            {% elsif product.handle == 'custom-breakfast' %}
              Build Custom Breakfasts
            {% else %}
              {{ product.title }}
            {% endif %}
          </h1>
          <div class="reviews-placeholder"><span class="yotpo-display-wrapper"></span></div>
          <div class="product-main__price"{% if product.handle == 'custom-meals' or product.handle == 'custom-breakfast' %} data-legacy-pricing="true"{% endif %}>
            <span
              data-product-price
              {% if product.handle == 'custom-meals' or product.handle == 'custom-breakfast' %}data-base-price="{{ current_variant.price }}"{% endif %}
            >{{ current_variant.price | money }}</span>
          </div>
        </div>
        
        {%- assign has_highlights = false -%}
        {%- if ingredient_highlights and ingredient_highlights.value != blank -%}
          {%- assign has_highlights = true -%}
        {%- endif -%}

        {%- if product.description != blank or has_highlights -%}
          <div class="product-summary-content">
            {%- if product.description != blank -%}
              <div class="product-description rte">{{ product.description }}</div>
            {%- endif -%}
            {%- if has_highlights -%}
              <div class="product-highlights">
                <h3 class="product-highlights__title">Ingredient Highlights</h3>
                <ul>
                  {%- for item in ingredient_highlights.value -%}
                    <li>{{ item }}</li>
                  {%- endfor -%}
                </ul>
              </div>
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>

      <!-- 2. The "Action" Card -->
      {%- form 'product', product, class: 'product-main__form', data-product-form: '' -%}
        <div class="product-main__options">
          <input type="hidden" name="id" value="{{ current_variant.id }}" data-product-variant-id>
          {%- unless product.has_only_default_variant -%}
            {%- for option in product.options_with_values -%}
              <div class="product-form__option">
                <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                <select id="Option-{{ section.id }}-{{ forloop.index0 }}" name="options[{{ option.name | escape }}]">
                  {%- for value in option.values -%}<option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected"{% endif %}>{{ value }}</option>{%- endfor -%}
                </select>
              </div>
            {%- endfor -%}
          {%- endunless -%}
          <div class="rc-widget-injection-parent"></div>
          {% render 'recharge-bundle' %}
        </div>
        <div class="product-main__actions">
          <div class="integrated-quantity">
            <button type="button" class="integrated-quantity__button" name="minus" aria-label="{{ 'products.product.quantity_decrease' | t }}">－</button>
            <span class="integrated-quantity__text" aria-live="polite">1</span>
            <input class="integrated-quantity__input" type="number" name="quantity" value="1" min="1" aria-label="{{ 'products.product.quantity_label' | t }}" data-quantity-input>
            <button type="button" class="integrated-quantity__button" name="plus" aria-label="{{ 'products.product.quantity_increase' | t }}">＋</button>
          </div>
          <button type="submit" name="add" class="product-card__add-btn alt-focus product-main-add-to-cart" {% unless current_variant.available %}disabled{% endunless %}>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg>
            <span data-add-to-cart-text>{%- if current_variant.available -%}Add{%- else -%}{{ 'products.product.sold_out' | t }}{%- endif -%}</span>
          </button>
        </div>
      {%- endform -%}

      <!-- 3. The "Reference" Cards -->
      {%- assign structured_ingredients = product.metafields.custom.structured_ingredients -%}
      {%- assign instructions_html = '' -%}
      {%- if nutrition.instructions != blank -%}
        {%- assign instructions_html = nutrition.instructions -%}
      {%- elsif section.settings.default_heating_instructions != blank -%}
        {%- assign instructions_html = section.settings.default_heating_instructions -%}
      {%- endif -%}
      
      <div class="product-visible-details">
        {%- if structured_ingredients and structured_ingredients.value != blank -%}
          <section class="product-detail-block">
            <h3>Ingredient Breakdown</h3>
            {%- for component in structured_ingredients.value -%}
              <div class="meal-component">
                <strong>{{ component.component_name }}:</strong>
                <p>{{ component.ingredient_list }}</p>
              </div>
            {%- endfor -%}

            {%- if nutrition.ingredients != blank -%}
              <details class="full-ingredients-collapsible">
                <summary>
                  <span>View Full Ingredient List</span>
                  <svg class="collapsible-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
                </summary>
                <div class="rte">{{ nutrition.ingredients }}</div>
              </details>
            {%- endif -%}
          </section>
        {%- elsif nutrition.ingredients != blank -%}
          <section class="product-detail-block">
            <h3>Ingredients</h3>
            <div class="rte">{{ nutrition.ingredients }}</div>
          </section>
        {%- endif -%}

        {%- if nutrition.allergens != blank -%}
          <section class="product-detail-block">
            <h3>Allergens</h3>
            <div class="rte">{{ nutrition.allergens }}</div>
          </section>
        {%- endif -%}

        {%- if instructions_html != blank -%}
          <section class="product-detail-block">
            <h3>Heating Instructions</h3>
            <div class="rte">{{ instructions_html }}</div>
          </section>
        {%- endif -%}
      </div>

      <div class="product-reviews">
        <h2>Customer Reviews</h2>
        {% comment %} Theme App Blocks can render the full review widget here {% endcomment %}
        {%- for block in section.blocks -%}
          <div {{ block.shopify_attributes }}>
            {% render block %}
          </div>
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>

{%- render 'footer-minimal-ordering' -%}
<script type="application/json" data-product-json>{{ product | json }}</script>
{% if product.handle == 'custom-meals' or product.handle == 'custom-breakfast' %}
  <script src="{{ 'legacy-dynamic-price.js' | asset_url }}" defer></script>
{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const sectionEl = document.querySelector('.product-main[data-section-id="{{ section.id }}"]');
    if (!sectionEl) return;
    new AjaxFormHandler(sectionEl);
    new IntegratedQuantityController(sectionEl);
  });

  class AjaxFormHandler {
    constructor(sectionEl) {
      this.form = sectionEl.querySelector('.product-main__form');
      this.addButton = sectionEl.querySelector('.product-main-add-to-cart');
      if (!this.form || !this.addButton) return;
      this.addButton.addEventListener('click', this.onButtonClick.bind(this));
    }
    async onButtonClick(e) {
      e.preventDefault();
      this.setLoading(true);
      try {
        const formData = new FormData(this.form);
        const response = await fetch('/cart/add.js', { method: 'POST', body: formData });
        if (!response.ok) throw new Error(await response.text());
        const cart = await response.json();
        document.dispatchEvent(new CustomEvent('cart:updated', { detail: { cart } }));
        this.setSuccess();
      } catch (error) {
        console.error('AJAX Cart Error:', error);
        this.revert();
      }
    }
    setLoading(isLoading) {
      this.addButton.classList.toggle('is-loading', isLoading);
      this.addButton.disabled = isLoading;
    }
    setSuccess() {
      this.addButton.classList.remove('is-loading');
      this.addButton.classList.add('is-added');
      setTimeout(() => this.revert(), 2000);
    }
    revert() {
      this.addButton.classList.remove('is-added');
      this.addButton.disabled = false;
    }
  }

  class IntegratedQuantityController {
    constructor(sectionEl) {
      this.wrap = sectionEl.querySelector('.integrated-quantity');
      if (!this.wrap) return;

      this.input = this.wrap.querySelector('.integrated-quantity__input[name="quantity"]');
      this.text  = this.wrap.querySelector('.integrated-quantity__text');
      this.minus = this.wrap.querySelector('[name="minus"], [data-qty-minus]');
      this.plus  = this.wrap.querySelector('[name="plus"], [data-qty-plus]');

      if (!this.input) return;

      this.bindEvents();
      this.sync();
    }
    bindEvents() {
      this.minus?.addEventListener('click', (event) => {
        event.preventDefault();
        this.adjust(-1);
      });
      this.plus?.addEventListener('click', (event) => {
        event.preventDefault();
        this.adjust(1);
      });
      this.input.addEventListener('input', () => this.sync());
      this.input.addEventListener('change', () => this.sync({ emitChange: false }));
    }
    adjust(delta) {
      const currentValue = parseInt(this.input.value, 10) || 1;
      const nextValue = Math.max(1, currentValue + delta);
      if (nextValue === currentValue) return;
      this.input.value = nextValue;
      this.sync({ emitChange: true });
    }
    sync(options = {}) {
      const { emitChange = false } = options;
      const value = Math.max(1, parseInt(this.input.value, 10) || 1);
      this.input.value = value;
      if (this.text) {
        this.text.textContent = value;
      }
      if (emitChange) {
        this.input.dispatchEvent(new Event('change', { bubbles: true }));
      }
    }
  }
</script>

{% schema %}
{
  "name": "Product Main Content",
  "tag": "section",
  "class": "product-main-content-section",
  "settings": [
    {
      "type": "richtext",
      "id": "default_heating_instructions",
      "label": "Default heating instructions"
    },
    {
      "type": "richtext",
      "id": "default_faq",
      "label": "Default FAQ content"
    }
  ],
  "blocks": [
    { "type": "@app" }
  ],
  "max_blocks": 6
}
{% endschema %}