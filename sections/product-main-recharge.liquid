{% comment %}
<!--
************************************************************************************
*
*  Product Page - Recharge (v9.5 - UI POLISH)
*  - REFINED: Replaced the promo callout icon with a cleaner "sparkles" SVG that
*    better communicates a special offer.
*  - REFINED: Added vertical margin below the promo title for improved scannability
*    and visual separation.
*
************************************************************************************
-->
{% endcomment %}

{%- liquid
  assign current_variant = product.selected_or_first_available_variant
  assign included_meals = product.metafields.custom.included_meals.value | default: product.metafields.custom.meal_plan_products.value
  assign has_subscriptions = false
  assign uses_legacy_pricing = false

  assign hero_hook     = product.metafields.plan.hook_line
  assign stat_cards    = product.metafields.plan.stat_cards_json.value
  assign who_for_list  = product.metafields.plan.who_for_list.value

  assign features_list   = product.metafields.plan.features_json.value
  assign assurances_list = product.metafields.plan.assurances_list.value

  if product.selling_plan_groups.size > 0
    assign has_subscriptions = true
  endif

  if product.handle == 'custom-meals' or product.handle == 'custom-breakfast'
    assign uses_legacy_pricing = true
  endif

  if features_list == blank
    assign features_list = shop.metafields.defaults.features_json.value
  endif
  if assurances_list == blank
    assign assurances_list = shop.metafields.defaults.assurances_list.value
  endif
  
  assign promo_end = settings.meal_plan_promo_end_date | default: ''
  assign promo_active = false
  if settings.meal_plan_promo_enable and settings.meal_plan_promo_pdp_enable
    assign now_ts = 'now' | date: '%s'
    assign end_ts = promo_end | date: '%s'
    if promo_end == blank or end_ts >= now_ts
      assign promo_active = true
    endif
  endif
-%}


<product-form-controller class="meal-plan-premium-layout product-main" data-section-id="{{ section.id }}" data-promo-active="{{ promo_active }}">
  <div class="meal-plan-hero-container">
    <div class="meal-plan-hero-grid">

      <div class="meal-plan-hero__info">
        <div class="meal-plan-hero__header">

          <div class="meal-plan-hero__title-wrapper">
            {%- assign display_title = product.metafields.custom.display_title | strip -%}
            <h1 class="meal-plan-hero__title">
              {%- if display_title != blank -%}
                {{- display_title | escape -}}
              {%- else -%}
                {{- product.title | escape -}}
              {%- endif -%}
            </h1>
            <span class="meal-plan-hero__tag">Meal Plan</span>
          </div>

          <div class="meal-plan-hero__bottomline">
            {% if settings.yotpo_star_instance_id %}
              <div
                class="yotpo-widget-instance"
                data-yotpo-instance-id="{{ settings.yotpo_star_instance_id }}"
                data-yotpo-product-id="{{ product.id }}"
                data-yotpo-name="{{ product.title | escape }}"
                data-yotpo-url="{{ shop.url }}{{ product.url }}"
                {% if product.featured_image %}
                  data-yotpo-image-url="{{ product.featured_image | image_url: width: 1024 }}"
                {% endif %}
                data-yotpo-description="{{ product.description | strip_html | truncate: 300 | escape }}"
              ></div>
            {% else %}
              <div
                class="yotpo yotpo-bottomline"
                data-product-id="{{ product.id }}"
                data-name="{{ product.title | escape }}"
                data-url="{{ shop.url }}{{ product.url }}"
              ></div>
            {% endif %}
          </div>

          {%- if uses_legacy_pricing -%}
            <div class="product-main__price" data-legacy-pricing="true">
              <span
                data-product-price
                data-base-price="{{ current_variant.price }}"
              >{{ current_variant.price | money }}</span>
            </div>
          {%- endif -%}

          {%- if hero_hook != blank -%}
            <p class="meal-plan-hero__hook">{{ hero_hook }}</p>
          {%- endif -%}
          
          {%- if features_list and features_list.size > 0 -%}
            <div class="meal-plan-key-benefits">
              <ul class="key-benefits__list">
                {%- for feature in features_list -%}
                  <li class="key-benefits__item">
                    <span class="key-benefits__icon">
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 11.08V12a10 10 0 11-5.93-9.14"/><path d="M22 4L12 14.01l-3-3"/></svg>
                    </span>
                    <span class="key-benefits__text">{{ feature.title }}</span>
                  </li>
                {%- endfor -%}
              </ul>
            </div>
          {%- endif -%}
        </div>
        
        {%- if product.description != blank -%}
          <div class="meal-plan-description rte">{{ product.description }}</div>
        {%- endif -%}

        {%- if who_for_list and who_for_list.size > 0 -%}
          <div class="meal-plan-target-audience">
            <h3 class="meal-plan-section-title">WHO IT'S FOR</h3>
            <ul class="meal-plan-target-audience__list">
              {%- for item in who_for_list -%}
                <li class="meal-plan-target-audience__item">
                  <span class="meal-plan-target-audience__icon-wrapper">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
                  </span>
                  <span>{{ item }}</span>
                </li>
              {%- endfor -%}
            </ul>
          </div>
        {%- endif -%}

        {%- if included_meals != blank -%}
          <div class="meal-plan-contents">
            <h3 class="meal-plan-section-title">WHAT'S IN YOUR PLAN</h3>
            <ul class="meal-plan-contents__list" data-dynamic-meal-list>
              {%- for meal in included_meals -%}
                <li>
                  <span class="meal-quantity-prefix"></span>
                  <span class="meal-title-text">{{- meal.title -}}</span>
                </li>
              {%- endfor -%}
            </ul>
            <p class="meal-plan-contents__disclaimer">Due to a routinely updating menu, subscription items in this meal plan are subject to change.</p>
          </div>
        {%- endif -%}
      </div>

      <div class="meal-plan-hero__form">
        <div class="meal-plan-form-card">
          <form method="post" action="/cart/add" accept-charset="UTF-8" class="product-form-recharge product-main__form" data-product-form>

            <div class="form-step" data-order="1">
              <label for="Option-{{ section.id }}-0" class="form-step__label">
                <span class="form-step__number">1</span>
                <span class="form-step__text">{{ product.options_with_values[0].name }}</span>
              </label>
              <div class="select-wrapper">
                <select id="Option-{{ section.id }}-0" name="{{ product.options_with_values[0].name }}" data-variant-selector>
                  {%- for value in product.options_with_values[0].values -%}
                    <option value="{{ value | escape }}" {% if product.options_with_values[0].selected_value == value %}selected="selected"{% endif %}>
                      {{ value }}
                    </option>
                  {%- endfor -%}
                </select>
                <svg class="select-wrapper__arrow" viewBox="0 0 24 24"><polyline points="6 9 12 15 18 9"></polyline></svg>
              </div>
            </div>

            <div class="form-step" data-order="2">
               <label class="form-step__label">
                 <span class="form-step__number">2</span>
                 <span class="form-step__text">Purchase Type</span>
               </label>
               <div class="purchase-options" data-purchase-options-container>
                  <div class="purchase-options__option" data-purchase-option="one-time">
                    <input type="radio" id="purchase-type-one-time-{{ section.id }}" name="purchase_type" value="one-time" {% if has_subscriptions == false %}checked{% endif %}>
                    <label for="purchase-type-one-time-{{ section.id }}">
                      <span class="purchase-options__title">One-Time Purchase</span>
                      <span class="purchase-options__price" data-one-time-price></span>
                    </label>
                  </div>
                  <div class="purchase-options__option{% if promo_active %} promo-active{% endif %}" data-purchase-option="subscribe">
                    <input type="radio" id="purchase-type-subscribe-{{ section.id }}" name="purchase_type" value="subscribe" {% if has_subscriptions %}checked{% endif %}>
                    <label for="purchase-type-subscribe-{{ section.id }}">
                      <span class="purchase-options__title">Subscribe & Save</span>
                      <span class="purchase-options__price" data-subscribe-price></span>
                      {% if promo_active %}
                        <span class="promo-deal-badge">Labor Day Deal</span>
                      {% endif %}
                    </label>
                  </div>
               </div>
               {% if promo_active %}
                <div class="pdp-promo-callout mp-promo-element">
                  <span class="pdp-promo-callout__icon" style="font-size: 1.2rem; line-height: 1;">🇺🇸</span>
                  <div class="pdp-promo-callout__text">
                    <span class="pdp-promo-callout__title">Extra savings applied in cart!</span>
                    <span class="pdp-promo-callout__subtitle">Labor Day Deal: Get automatic discounts on your next 4 orders when you choose "Subscribe & Save." That’s up to $180 in total savings. Offer ends September 2.</span>
                  </div>
                </div>
               {% endif %}
            </div>

            <div class="form-step" data-selling-plan-selector-container data-order="3">
                <label class="form-step__label">
                  <span class="form-step__number">3</span>
                  <span class="form-step__text">Delivery Frequency</span>
                </label>
                <div class="selling-plan-grid" data-selling-plan-grid></div>
                <select name="selling_plan" data-selling-plan-select hidden></select>
            </div>

            <input type="hidden" name="id" value="{{ current_variant.id }}" data-variant-id-input>
            
            <div class="product-form-recharge__footer" data-order="4">
              {% render 'meal-plan-promo-breadcrumb', context: 'pdp' %}

              <div class="meal-plan-form__actions">
                <div class="product-form-recharge__actions">
                  <div class="integrated-quantity">
                    <button type="button" class="integrated-quantity__button" name="minus" aria-label="{{ 'products.product.quantity_decrease' | t }}" data-quantity-minus>－</button>
                    <input class="integrated-quantity__input" type="number" name="quantity" value="1" min="1" aria-label="Quantity" readonly>
                    <span class="integrated-quantity__text" aria-live="polite" data-quantity-input>1</span>
                    <button type="button" class="integrated-quantity__button" name="plus" aria-label="{{ 'products.product.quantity_increase' | t }}" data-quantity-plus>＋</button>
                  </div>
                  <button type="submit" name="add" class="button button--primary product-form-recharge__add-btn" data-add-to-cart-button>
                    <span data-add-to-cart-text>Add to Cart</span>
                  </button>
                </div>
              </div>
            </div>

            <div class="rc-widget-injection-parent"></div>
          </form>
        </div>
      </div>
    </div>
  </div>

  {%- if assurances_list and assurances_list.size > 0 -%}
    <div class="meal-plan-assurances">
      {%- for assurance in assurances_list -%}
        <div class="meal-plan-assurance">
          <span>{{ assurance }}</span>
        </div>
      {%- endfor -%}
    </div>
  {%- endif -%}

  {% render 'meal-plan-grid', product: product %}

  {% render 'product-reviews-fullwidth', heading: 'Customer Reviews', boxed_container: false %}

  <script type="application/json" data-product-json>{{ product | json }}</script>
  <script type="application/json" data-selling-plans-json>{{ product.selling_plan_groups | json }}</script>
  <script type="application/json" data-included-meals-json>{%- if included_meals != blank -%}{{ included_meals | map: 'title' | json }}{%- else -%}[]{%- endif -%}</script>
</product-form-controller>

{%- render 'footer-minimal-ordering' -%}

<script src="{{ 'legacy-dynamic-price.js' | asset_url }}" defer></script>

<script>
class ProductFormController extends HTMLElement {
  constructor() {
    super();
    this.productData = JSON.parse(this.querySelector('[data-product-json]').textContent);
    this.sellingPlanGroups = JSON.parse(this.querySelector('[data-selling-plans-json]').textContent);
    this.includedMeals = JSON.parse(this.querySelector('[data-included-meals-json]').textContent);
    this.form = this.querySelector('[data-product-form]');
    this.variantSelector = this.querySelector('[data-variant-selector]');
    this.purchaseOptionsContainer = this.querySelector('[data-purchase-options-container]');
    this.sellingPlanSelectorContainer = this.querySelector('[data-selling-plan-selector-container]');
    this.sellingPlanGrid = this.querySelector('[data-selling-plan-grid]');
    this.sellingPlanSelect = this.querySelector('[data-selling-plan-select]');
    this.subscribeRadio = this.querySelector('input[value="subscribe"]');
    this.variantIdInput = this.querySelector('[data-variant-id-input]');
    this.quantityInput = this.querySelector('[data-quantity-input]');
    this.oneTimePriceDisplay = this.querySelector('[data-one-time-price]');
    this.subscribePriceDisplay = this.querySelector('[data-subscribe-price]');
    this.addToCartButton = this.querySelector('[data-add-to-cart-button]');
    this.dynamicMealList = this.querySelector('[data-dynamic-meal-list]');
    this.promoActive = this.dataset.promoActive === 'true';
    
    this.addToCartButton.addEventListener('click', this.onAddToCartClick.bind(this));
    
    this.variantSelector.addEventListener('change', this.updateUI.bind(this));
    this.purchaseOptionsContainer.addEventListener('change', this.updateUI.bind(this));
    this.sellingPlanGrid.addEventListener('click', this.onSellingPlanGridClick.bind(this));
  }

  connectedCallback() {
    this.initQuantityButtons();
    this.updateUI();
  }

  async onAddToCartClick(evt) {
    evt.preventDefault();
    this.setLoading(true);
    const purchaseTypeInput = this.querySelector('input[name="purchase_type"]:checked');
    const purchaseType = purchaseTypeInput ? purchaseTypeInput.value : null;

    const formData = new FormData(this.form);
    formData.delete('purchase_type');
    if (purchaseType === 'one-time') {
      formData.delete('selling_plan');
    }
    
    try {
      const response = await fetch('/cart/add.js', { method: 'POST', body: formData });
      if (!response.ok) throw new Error(await response.text());
      const cart = await response.json();
      document.dispatchEvent(new CustomEvent('cart:updated', { detail: { cart } }));
      if (this.promoActive && purchaseType === 'subscribe') {
        try {
          await fetch('/discount/180OFF');
          sessionStorage.setItem('deferred_discount', '180OFF');
        } catch (discountError) {
          console.error('Discount Apply Error:', discountError);
        }
      }
      this.setSuccess();
    } catch (error) {
      console.error('Cart Submission Error:', error);
      this.revertButton();
    }
  }

  setLoading(isLoading) {
    this.addToCartButton.classList.toggle('is-loading', isLoading);
    this.addToCartButton.disabled = isLoading;
  }

  setSuccess() {
    this.addToCartButton.classList.remove('is-loading');
    this.addToCartButton.classList.add('is-added');
    setTimeout(() => this.revertButton(), 2000);
  }

  revertButton() {
    this.addToCartButton.classList.remove('is-added');
    this.addToCartButton.classList.remove('is-loading');
    const currentVariant = this.getSelectedVariant();
    this.addToCartButton.disabled = currentVariant ? !currentVariant.available : true;
  }
  
  updateUI() {
    const selectedVariant = this.getSelectedVariant();
    if (!selectedVariant) return;

    const purchaseType = this.querySelector('input[name="purchase_type"]:checked').value;
    this.variantIdInput.value = selectedVariant.id;
    this.updateMealQuantities(selectedVariant);

    const allocations = selectedVariant.selling_plan_allocations;
    const subscribeOption = this.querySelector('[data-purchase-option="subscribe"]');

    let oneTimePriceHtml = '';
    if (selectedVariant.compare_at_price > selectedVariant.price) {
      oneTimePriceHtml += `<del>${this.formatMoney(selectedVariant.compare_at_price)}</del> `;
    }
    oneTimePriceHtml += `<span>${this.formatMoney(selectedVariant.price)}</span>`;
    this.oneTimePriceDisplay.innerHTML = oneTimePriceHtml;

    if (allocations && allocations.length > 0) {
      subscribeOption.hidden = false;
      const selectedPlanId = this.sellingPlanSelect.value;
      this.populateSellingPlans(selectedVariant, selectedPlanId);

      const selectedSellingPlanAllocation = this.getSelectedSellingPlan(selectedVariant);
      if (selectedSellingPlanAllocation) {
        const regularPrice = selectedSellingPlanAllocation.compare_at_price > 0 ? selectedSellingPlanAllocation.compare_at_price : selectedVariant.price;
        const discountedPrice = this.promoActive ? Math.round(selectedSellingPlanAllocation.price * 0.85) : selectedSellingPlanAllocation.price;
        let subscribePriceHtml = '';
        if (regularPrice > discountedPrice) {
          subscribePriceHtml += `<del>${this.formatMoney(regularPrice)}</del> `;
        }
        subscribePriceHtml += `<span>${this.formatMoney(discountedPrice)}</span>`;
        this.subscribePriceDisplay.innerHTML = subscribePriceHtml;
      }
      
      const showPlans = purchaseType === 'subscribe' && selectedSellingPlanAllocation;
      this.sellingPlanSelectorContainer.style.display = showPlans ? 'block' : 'none';
    } else {
      subscribeOption.hidden = true;
      this.sellingPlanSelectorContainer.style.display = 'none';
      this.querySelector('input[value="one-time"]').checked = true;
    }

    const promoEls = this.querySelectorAll('.mp-promo-element');
    if (promoEls) {
      promoEls.forEach(el => { el.style.display = purchaseType === 'subscribe' ? '' : 'none'; });
    }

    this.addToCartButton.disabled = !selectedVariant.available;
  }

  updateMealQuantities(variant) {
    if (!this.includedMeals || this.includedMeals.length === 0) return;

    const totalMeals = parseInt(variant.option1.split(' ')[0], 10);
    const numMealTypes = this.includedMeals.length;

    if (isNaN(totalMeals) || numMealTypes === 0) return;

    const quantityPerMeal = totalMeals / numMealTypes;
    const displayQuantity = Math.floor(quantityPerMeal);
    const allCallouts = this.querySelectorAll('[data-meal-quantity-callout]');
    const flashDuration = 400;

    if (displayQuantity > 0) {
      allCallouts.forEach(callout => {
        callout.style.removeProperty('display');
        callout.textContent = `${displayQuantity}x`;
        callout.classList.add('is-active');
        callout.classList.add('is-updating');
        setTimeout(() => callout.classList.remove('is-updating'), flashDuration);
      });

      if (this.dynamicMealList) {
        let newListHtml = '';
        this.includedMeals.forEach(mealTitle => {
          newListHtml += `<li><span class="meal-quantity-prefix">${displayQuantity}x</span><span class="meal-title-text">${mealTitle}</span></li>`;
        });
        this.dynamicMealList.innerHTML = newListHtml;
        this.dynamicMealList.querySelectorAll('.meal-quantity-prefix').forEach(prefix => {
          prefix.classList.add('is-updating');
          setTimeout(() => prefix.classList.remove('is-updating'), flashDuration);
        });
      }
    } else {
      allCallouts.forEach(callout => {
        callout.style.removeProperty('display');
        callout.classList.remove('is-active');
        callout.classList.remove('is-updating');
        callout.textContent = '';
      });
    }
  }
  
  populateSellingPlans(e,t=null){this.sellingPlanGrid.innerHTML="",this.sellingPlanSelect.innerHTML="";const s=e.selling_plan_allocations;s.forEach(((i,n)=>{const a=this.sellingPlanGroups.find((r=>r.id===i.selling_plan_group_id));if(!a)return;const l=a.selling_plans.find((r=>r.id===i.selling_plan_id));if(!l)return;const c=document.createElement("option");c.value=l.id,c.textContent=l.name,this.sellingPlanSelect.appendChild(c);const o=document.createElement("button");o.type="button",o.className="selling-plan-grid__button",o.dataset.planId=l.id,o.textContent=l.name.replace("Every ","").replace(" week","w").replace("s",""),this.sellingPlanGrid.appendChild(o),t&&t==l.id?(o.classList.add("is-active"),c.selected=!0):t||0!==n||(o.classList.add("is-active"),c.selected=!0)}))}
  onSellingPlanGridClick(e){const t=e.target.closest(".selling-plan-grid__button");t&&(this.querySelectorAll(".selling-plan-grid__button").forEach((s=>s.classList.remove("is-active"))),t.classList.add("is-active"),this.sellingPlanSelect.value=t.dataset.planId,this.subscribeRadio.checked=!0,this.updateUI())}
  initQuantityButtons(){const e=this.querySelector("[data-quantity-minus]"),t=this.querySelector("[data-quantity-plus]"),s=this.querySelector("[data-quantity-input]");if(!e||!t||!s)return;const i=this.querySelector('.integrated-quantity__input[name="quantity"]'),n=()=>{let a=parseInt(i.value,10);s.textContent=a};i.addEventListener("change",n),e.addEventListener("click",(()=>{let a=parseInt(i.value,10);a>1&&(a--,i.value=a,i.dispatchEvent(new Event("change")))})),t.addEventListener("click",(()=>{let a=parseInt(i.value,10);a++,i.value=a,i.dispatchEvent(new Event("change"))})),n()}
  getSelectedVariant(){const e=this.variantSelector.value;return this.productData.variants.find((t=>t.option1===e))}
  getSelectedSellingPlan(e){const t=this.sellingPlanSelect.value;return e.selling_plan_allocations.find((s=>s.selling_plan_id==t))||e.selling_plan_allocations[0]}
  formatMoney(e){return`$${(e/100).toFixed(2)}`}
}
customElements.define('product-form-controller', ProductFormController);

document.addEventListener('DOMContentLoaded', () => {
  const uniqueAnchor = () => {
    const anchors = Array.from(document.querySelectorAll('#yotpo-main-widget'));
    if (anchors.length > 1) {
      anchors.slice(1).forEach((anchor) => anchor.remove());
    }
  };

  const coerceYotpoHref = () => {
    const selectors = [
      '.yotpo.bottomLine a[href^="#"]',
      '.yotpo-widget-instance a[href^="#"]',
    ];

    selectors.forEach((selector) => {
      document.querySelectorAll(selector).forEach((link) => {
        if (link.getAttribute('href') !== '#yotpo-main-widget') {
          link.setAttribute('href', '#yotpo-main-widget');
        }
      });
    });
  };

  const hydrateYotpo = () => {
    if (window.Yotpo) {
      const fn = window.Yotpo.refreshWidgets || window.Yotpo.initWidgets;
      if (typeof fn === 'function') {
        fn.call(window.Yotpo);
      }
    }
  };

  const wireSmoothScroll = () => {
    const selector = '.yotpo.bottomLine a[href^="#"], .yotpo-widget-instance a[href^="#"]';
    document.addEventListener('click', (event) => {
      const link = event.target.closest(selector);
      if (!link) return;

      const targetId = link.getAttribute('href').replace(/^#/, '');
      if (!targetId) return;

      const target = document.getElementById(targetId);
      if (!target) return;

      event.preventDefault();

      const prefersReducedMotion = typeof window.matchMedia === 'function' && window.matchMedia('(prefers-reduced-motion: reduce)').matches;

      target.scrollIntoView({
        behavior: prefersReducedMotion ? 'auto' : 'smooth',
        block: 'start'
      });

      if (history.replaceState) {
        history.replaceState(null, '', `#${targetId}`);
      } else {
        window.location.hash = targetId;
      }
    }, { passive: false });
  };

  uniqueAnchor();
  coerceYotpoHref();
  hydrateYotpo();
  wireSmoothScroll();

  document.addEventListener('shopify:section:load', () => {
    uniqueAnchor();
    coerceYotpoHref();
    hydrateYotpo();
  });

  document.addEventListener('yotpo:widgetLoaded', () => {
    uniqueAnchor();
    coerceYotpoHref();
  });
});
</script>

<style>
  product-form-controller {
    display: block;
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
  }

  .meal-plan-hero__info,
  .meal-plan-hero__form {
    min-width: 0;
  }

  :root {
    --brand-primary: #2a9d8f;
    --brand-primary-light: #f0fdfa;
    --brand-primary-border: rgba(42, 157, 143, 0.4);
    --brand-primary-dark: #1f766b;
    --brand-accent-red: #ef4444;
    --text-primary: #212529;
    --text-secondary: #495057;
    --text-tertiary: #6c757d;
    --color-background: #f8f9fa;
    --color-surface: #ffffff;
    --border-color-soft: #e9ecef;
    --shadow-soft: 0 14px 26px rgba(15, 23, 42, 0.08);
    --card-shadow: 0 28px 45px rgba(15, 23, 42, 0.08);
    --card-gradient: linear-gradient(135deg, #ffffff 0%, #f8fffb 55%, #f0fdfa 100%);
    --radius-md: 12px;
    --radius-lg: 18px;
  }

  .meal-plan-premium-layout {
    --card-shadow: 0 28px 45px rgba(15, 23, 42, 0.08);
    --card-gradient: linear-gradient(135deg, #ffffff 0%, #f8fffb 55%, #f0fdfa 100%);
  }

  .meal-plan-hero-container {
    position: relative;
    background: var(--card-gradient);
    border: 1px solid rgba(42, 157, 143, 0.14);
    border-radius: 18px;
    padding: clamp(1.75rem, 4vw, 2.75rem);
    box-shadow: var(--card-shadow);
    overflow: hidden;
  }

  .meal-plan-hero-container::before,
  .meal-plan-hero-container::after {
    content: '';
    position: absolute;
    pointer-events: none;
    border-radius: 50%;
    opacity: 0.9;
  }

  .meal-plan-hero-container::before {
    inset: auto -35% 20% auto;
    width: 320px;
    height: 320px;
    background: radial-gradient(circle at center, rgba(42, 157, 143, 0.18) 0%, rgba(42, 157, 143, 0) 70%);
  }

  .meal-plan-hero-container::after {
    top: -120px;
    left: -120px;
    width: 220px;
    height: 220px;
    background: radial-gradient(circle at center, rgba(236, 72, 153, 0.12) 0%, rgba(236, 72, 153, 0) 70%);
  }

  .meal-plan-hero-grid {
    position: relative;
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    gap: clamp(2rem, 5vw, 3.5rem);
    align-items: start;
    z-index: 1;
  }

  @media (min-width: 1024px) {
    .meal-plan-hero-grid {
      grid-template-columns: minmax(0, 1fr) clamp(480px, 36vw, 560px);
    }
    .meal-plan-hero__form {
      position: sticky;
      top: 2rem;
    }
  }

  .meal-plan-hero__info {
    display: flex;
    flex-direction: column;
    gap: clamp(1.5rem, 3vw, 2rem);
    color: var(--text-secondary);
  }

  .meal-plan-section-title {
    font-size: 0.875rem;
    font-weight: 700;
    letter-spacing: 0.08em;
    text-transform: uppercase;
    margin: 0 0 1rem;
    color: var(--text-tertiary);
  }

  .meal-plan-hero__header {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .meal-plan-hero__title-wrapper {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.75rem;
    row-gap: 0.25rem;
  }

  .meal-plan-hero__title {
    font-family: "Inter", "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif !important;
    font-size: clamp(2.4rem, 4vw, 3.1rem) !important;
    font-weight: 800 !important;
    line-height: 1.1 !important;
    letter-spacing: -0.025em !important;
    color: var(--text-primary) !important;
    margin: 0 !important;
  }

  .meal-plan-hero__tag {
    display: inline-flex;
    align-items: center;
    background: linear-gradient(135deg, #ef4444 0%, #f97316 100%);
    color: var(--color-surface);
    font-size: 0.75rem;
    font-weight: 700;
    line-height: 1;
    text-transform: uppercase;
    letter-spacing: 0.06em;
    padding: 0.4em 0.9em;
    border-radius: 999px;
    white-space: nowrap;
    transform: translateY(-2px);
  }

  .meal-plan-hero__bottomline {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-secondary);
    font-weight: 600;
  }

  .meal-plan-hero__bottomline .yotpo-bottomline,
  .meal-plan-hero__bottomline .yotpo-widget-instance {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .meal-plan-hero__bottomline .yotpo-stars {
    transform: translateY(-1px);
  }

  .meal-plan-description.rte {
    padding-top: clamp(1.5rem, 3vw, 2rem);
    border-top: 1px solid rgba(33, 37, 41, 0.08);
    font-size: 1rem;
    line-height: 1.7;
    color: var(--text-secondary);
  }

  .meal-plan-description.rte p:first-child { margin-top: 0; }
  .meal-plan-description.rte p:last-child { margin-bottom: 0; }

  .meal-plan-key-benefits {
    margin-top: 1.5rem;
  }

  .key-benefits__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 1.25rem;
  }

  .key-benefits__item {
    display: inline-flex;
    align-items: center;
    gap: 0.6rem;
    font-weight: 600;
    color: var(--text-primary);
  }

  .key-benefits__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    color: var(--brand-primary-dark);
  }

  .meal-plan-target-audience {
    margin: 0;
    padding: 0;
    background: rgba(255, 255, 255, 0.65);
    border: 1px solid rgba(42, 157, 143, 0.14);
    border-radius: 18px;
    box-shadow: 0 18px 35px rgba(15, 23, 42, 0.06);
    padding: clamp(1.25rem, 3vw, 1.75rem);
  }

  .meal-plan-target-audience__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .meal-plan-target-audience__item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-weight: 600;
    color: var(--text-secondary);
  }

  .meal-plan-target-audience__icon-wrapper {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background: var(--brand-primary-light);
    border: 1px solid var(--brand-primary-border);
    color: var(--brand-primary);
  }

  .meal-plan-contents {
    background: rgba(255, 255, 255, 0.65);
    border: 1px solid rgba(42, 157, 143, 0.14);
    border-radius: 18px;
    padding: clamp(1.25rem, 3vw, 1.75rem);
    box-shadow: 0 18px 35px rgba(15, 23, 42, 0.06);
    backdrop-filter: blur(2px);
  }

  .meal-plan-contents__title {
    margin: 0 0 1rem;
    font-size: 1.1rem;
    font-weight: 700;
    color: var(--text-primary);
  }

  .meal-plan-contents__list {
    display: grid;
    gap: 0.75rem;
    list-style: none;
    margin: 0 0 1.25rem;
    padding: 0;
  }

  .meal-plan-contents__list li {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-weight: 600;
    color: var(--text-primary);
  }

  .meal-plan-items__grid-item {
    position: relative;
  }

  .meal-plan-quantity-callout {
    position: absolute;
    top: clamp(0.75rem, 2vw, 1rem);
    right: clamp(0.75rem, 2vw, 1rem);
    width: clamp(2.25rem, 3.5vw, 2.5rem);
    height: clamp(2.25rem, 3.5vw, 2.5rem);
    border-radius: 999px;
    display: none;
    align-items: center;
    justify-content: center;
    background: var(--brand-primary);
    color: #ffffff;
    font-size: 0.9rem;
    font-weight: 700;
    line-height: 1;
    letter-spacing: -0.01em;
    box-shadow: 0 12px 24px rgba(42, 157, 143, 0.25);
    pointer-events: none;
    z-index: 2;
    opacity: 0;
    transition: transform 0.25s ease, box-shadow 0.25s ease, opacity 0.2s ease;
  }

  .meal-plan-quantity-callout.is-active {
    display: flex;
    opacity: 1;
  }

  .meal-plan-quantity-callout.is-updating {
    transform: scale(1.08);
    box-shadow: 0 16px 28px rgba(42, 157, 143, 0.3);
  }

  .meal-quantity-prefix {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 36px;
    padding: 0.35rem 0.75rem;
    border-radius: 999px;
    background: var(--brand-primary-light);
    border: 1px solid var(--brand-primary-border);
    color: var(--brand-primary);
    font-size: 0.85rem;
    font-weight: 700;
    transition: transform 0.25s ease, box-shadow 0.25s ease;
  }

  @keyframes qty-flash { 0%, 100% { transform: scale(1); } 50% { transform: scale(1.08); } }

  .meal-quantity-prefix.is-updating {
    transform: scale(1.08);
    box-shadow: 0 0 0 6px rgba(42, 157, 143, 0.12);
  }

  .meal-plan-contents__disclaimer {
    margin: 0;
    font-size: 0.85rem;
    color: var(--text-tertiary);
  }

  .meal-plan-form-card {
    position: relative;
    background: var(--card-gradient);
    border: 1px solid rgba(42, 157, 143, 0.18);
    border-radius: 18px;
    padding: clamp(1.5rem, 3vw, 2rem);
    box-shadow: var(--card-shadow);
    display: flex;
    flex-direction: column;
    gap: clamp(1.5rem, 3vw, 2rem);
  }

  .meal-plan-form-card::after {
    content: '';
    position: absolute;
    inset: auto -20% -40px auto;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    background: radial-gradient(circle at center, rgba(42, 157, 143, 0.12) 0%, rgba(42, 157, 143, 0) 70%);
    pointer-events: none;
  }

  .meal-plan-form__options {
    display: flex;
    flex-direction: column;
    gap: clamp(1.25rem, 2vw, 1.75rem);
  }

  .meal-plan-form__option-group {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .meal-plan-form__option-group label {
    font-size: 0.85rem;
    font-weight: 700;
    letter-spacing: 0.08em;
    text-transform: uppercase;
    color: var(--text-tertiary);
  }

  .select-wrapper {
    position: relative;
    display: inline-flex;
    width: 100%;
    align-items: center;
    background: #ffffff;
    border: 1px solid rgba(15, 23, 42, 0.08);
    border-radius: 12px;
    box-shadow: inset 0 1px 2px rgba(255, 255, 255, 0.6), 0 12px 30px rgba(15, 23, 42, 0.06);
    padding: 0 0.75rem;
    padding-right: 2.75rem;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
  }

  .select-wrapper:focus-within {
    border-color: rgba(42, 157, 143, 0.45);
    box-shadow: 0 0 0 4px rgba(42, 157, 143, 0.15);
  }

  .select-wrapper select {
    appearance: none;
    -webkit-appearance: none;
    width: 100%;
    padding: 0.85rem 0.25rem;
    border: none;
    background: transparent;
    font-size: 1rem;
    font-weight: 600;
    color: var(--text-primary);
    line-height: 1.4;
  }

  .select-wrapper select:focus {
    outline: none;
  }

  .select-wrapper__arrow {
    position: absolute;
    top: 50%;
    right: 1rem;
    transform: translateY(-50%);
    width: 20px;
    height: 20px;
    stroke: var(--text-tertiary);
    stroke-width: 2.5;
    pointer-events: none;
  }

  /* Keep label layout tidy */
  .form-step__label {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-weight: 700;
    color: var(--text-primary);
  }

  /* Space between steps */
  .product-form-recharge .form-step:not(:first-child) {
    margin-top: 1.25rem;
    padding-top: 1rem;
    border-top: 1px solid rgba(33, 37, 41, 0.08);
  }

  .form-step__number {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    border-radius: 999px;
    font-weight: 700;
    font-size: 0.875rem;
    line-height: 1;
    background: var(--text-primary);
    color: #ffffff;
    flex-shrink: 0;
  }

  .form-step__text {
    display: inline-flex;
    align-items: center;
  }

  @media (min-width: 1024px) {
    .form-step__number {
      width: 28px;
      height: 28px;
      font-size: 0.95rem;
    }
  }

  @media (max-width: 420px) {
    .form-step__label {
      gap: 0.6rem;
    }
  }

  .meal-plan-form__actions {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .product-form-recharge__actions {
    display: grid;
    grid-template-columns: 140px 1fr;
    gap: 0.75rem;
    align-items: center;
  }

  .integrated-quantity {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: var(--brand-primary);
    border-radius: 14px;
    color: var(--color-surface);
    overflow: hidden;
  }

  .integrated-quantity__button {
    border: none;
    background: transparent;
    color: inherit;
    font-size: 1.3rem;
    font-weight: 600;
    line-height: 1;
    padding: 0.8rem;
    cursor: pointer;
    transition: opacity 0.2s ease;
  }

  .integrated-quantity__button:hover,
  .integrated-quantity__button:focus-visible {
    opacity: 0.8;
  }

  .integrated-quantity__text {
    font-size: 1rem;
    font-weight: 700;
  }

  .integrated-quantity__input {
    display: none;
  }

  /* Restore outlined CTA style */
  .product-form-recharge__add-btn {
    background: #ffffff;
    color: var(--brand-primary);
    border: 2px solid var(--brand-primary);
    border-radius: 14px;
    padding: 0.9rem 1.25rem;
    font-weight: 700;
    font-size: 1rem;
    text-transform: none;
    letter-spacing: -0.01em;
    box-shadow: none;
    transition: transform 0.15s ease, box-shadow 0.15s ease, color 0.15s ease, background 0.15s ease, border-color 0.15s ease;
  }

  /* Hover/focus: subtle lift, keep outline look */
  .product-form-recharge__add-btn:hover,
  .product-form-recharge__add-btn:focus-visible {
    background: #ffffff;
    color: var(--brand-primary);
    border-color: var(--brand-primary);
    transform: translateY(-1px);
    box-shadow: 0 4px 14px rgba(31, 118, 107, 0.12);
  }

  /* Disabled state */
  .product-form-recharge__add-btn:disabled {
    background: #ffffff;
    color: rgba(31, 118, 107, 0.45);
    border-color: rgba(31, 118, 107, 0.35);
    box-shadow: none;
    transform: none;
    cursor: not-allowed;
  }

  .purchase-options {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 0.75rem;
  }

  .purchase-options__option {
    position: relative;
  }

  .purchase-options__option input[type=radio] {
    position: absolute;
    opacity: 0;
    pointer-events: none;
  }

  .purchase-options__option label {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 1rem;
    border-radius: 16px;
    border: 2px solid rgba(15, 23, 42, 0.08);
    background: #ffffff;
    box-shadow: inset 0 1px 2px rgba(255, 255, 255, 0.6), 0 12px 20px rgba(15, 23, 42, 0.06);
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
    gap: 0.35rem;
  }

  .purchase-options__option input[type=radio]:checked + label {
    border-color: var(--brand-primary);
    box-shadow: inset 0 1px 2px rgba(42, 157, 143, 0.1), 0 14px 24px rgba(42, 157, 143, 0.15);
    background: var(--brand-primary-light);
  }

  .purchase-options__title {
    font-size: 0.9rem;
    font-weight: 700;
    color: var(--text-primary);
  }

  .purchase-options__price {
    font-size: 1.1rem;
    font-weight: 700;
    color: var(--text-primary);
  }

  .purchase-options__price del {
    color: var(--text-tertiary);
    font-weight: 500;
    margin-right: 6px;
    opacity: 0.7;
  }

  [data-purchase-option='subscribe']:not(.promo-active) input[type=radio]:checked + label .purchase-options__title,
  [data-purchase-option='subscribe']:not(.promo-active) input[type=radio]:checked + label .purchase-options__price {
    color: var(--brand-primary-dark);
  }

  @keyframes promo-glow {
    0% { box-shadow: 0 0 0 2px rgba(30, 58, 138, 0.18); }
    50% { box-shadow: 0 0 10px 2px rgba(30, 58, 138, 0.35); }
    100% { box-shadow: 0 0 0 2px rgba(30, 58, 138, 0.18); }
  }

  .purchase-options__option.promo-active input[type=radio]:checked + label {
    background: linear-gradient(135deg, rgba(239, 246, 255, 0.82) 0%, rgba(255, 255, 255, 0.82) 60%, rgba(254, 242, 242, 0.82) 100%);
    border-color: #1e3a8a;
    animation: promo-glow 2.5s infinite ease-in-out;
  }

  .promo-deal-badge {
    margin-top: 0.35rem;
    display: inline-block;
    background: linear-gradient(135deg, #1e3a8a 0%, #312e81 100%);
    color: #ffffff;
    padding: 4px 10px;
    border-radius: 99px;
    font-size: 0.7rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .pdp-promo-callout {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    margin-top: 0.75rem;
    padding: 0.85rem 1rem;
    background: #fdf5f5;
    border: 1px solid rgba(244, 114, 182, 0.35);
    border-radius: 14px;
  }

  .pdp-promo-callout__icon {
    flex-shrink: 0;
    width: 22px;
    height: 22px;
  }

  .pdp-promo-callout__title {
    font-size: 0.92rem;
    font-weight: 700;
    color: #d42828;
    margin-bottom: 0.15rem;
  }

  .pdp-promo-callout__subtitle {
    font-size: 0.82rem;
    line-height: 1.4;
    color: var(--text-primary);
  }

  .selling-plan-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
    gap: 0.65rem;
  }

  .selling-plan-grid__button {
    appearance: none;
    -webkit-appearance: none;
    background: #ffffff;
    border: 1px solid rgba(15, 23, 42, 0.08);
    border-radius: 12px;
    padding: 0.75rem 0.5rem;
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--text-tertiary);
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    text-align: center;
  }

  .selling-plan-grid__button.is-active {
    background: var(--brand-primary-light);
    border-color: var(--brand-primary);
    color: var(--brand-primary-dark);
  }

  /* Slightly more space before the footer section */
  .product-form-recharge__footer {
    margin-top: 1.25rem;
    padding-top: 1.25rem;
    border-top: 1px solid rgba(33, 37, 41, 0.08);
  }

  .rc-widget-injection-parent > .rc-widget,
  .rc-template {
    display: none !important;
  }

  .meal-plan-assurances {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    margin: 3rem 0;
    padding: 1.5rem;
    background: var(--color-background);
    border-radius: 18px;
    border: 1px solid rgba(42, 157, 143, 0.14);
  }

  .meal-plan-assurance {
    flex: 1 1 180px;
    text-align: center;
    font-size: 0.9rem;
    font-weight: 500;
    color: var(--text-secondary);
  }

  .collection-header-section-v8__cart-count {
    color: #000000 !important;
  }

  @media (max-width: 991px) {
    .meal-plan-hero-container {
      padding: clamp(1.5rem, 5vw, 2.25rem);
      border-radius: 16px;
    }

    .meal-plan-form-card {
      padding: clamp(1.25rem, 4vw, 1.75rem);
    }
  }

  @media (max-width: 749px) {
    .meal-plan-premium-layout {
      padding-bottom: 2rem;
    }

    .meal-plan-hero-container {
      margin: 0 -1rem;
      border-radius: 0;
    }

    .meal-plan-hero__bottomline {
      justify-content: flex-start;
    }

    .meal-plan-quantity-callout {
      width: 2.25rem;
      height: 2.25rem;
      font-size: 0.8rem;
      top: 0.65rem;
      right: 0.65rem;
    }

    .meal-plan-contents {
      border-radius: 16px;
    }

    .purchase-options {
      grid-template-columns: 1fr;
    }

    .product-form-recharge__actions {
      grid-template-columns: 1fr;
    }

    .integrated-quantity {
      justify-content: center;
    }
  }
</style>

{% schema %}
{
  "name": "Product Page (Recharge)",
  "tag": "section"
}
{% endschema %}